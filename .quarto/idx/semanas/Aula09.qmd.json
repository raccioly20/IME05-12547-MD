{"title":"Regressão Logística","markdown":{"yaml":{"title":"Regressão Logística","author":"Ricardo Accioly","date":"`r Sys.Date()`","output":{"html_document":{"toc":"yes","code_download":"yes"}}},"headingText":"Carregando Bibliotecas","containsRefs":false,"markdown":"\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(fig.width = 9, \n                      fig.height= 7,  \n                      fig.retina = 3,\n                      message = FALSE, \n                      warning = FALSE,\n                      dev=c(\"png\"), \n                      fig.path=\"imagens/Aula09/\")\n```\n\n\n\n```{r bibliotecas}\nlibrary(tidyverse)\nlibrary(ISLR)\ndata(Default)\nsummary(Default)\nstr(Default)\nhead(Default)\n```\n\n## Manipulando os dados\n\n\n```{r inadimplente}\ncredito <- tibble(Default)\nsummary(credito)\n# renomeando colunas\ncredito <- credito %>% \n                rename( inadimplente = default, estudante = student, balanco = balance,\n                receita = income)\ncredito <- credito %>% mutate( inadimplente =  case_when(\n                           inadimplente == \"No\"  ~ \"Nao\",\n                           inadimplente == \"Yes\" ~ \"Sim\"\n                          )) %>% mutate(inadimplente = factor(inadimplente))\ncredito <- credito %>% mutate( estudante =  case_when(\n                           estudante == \"No\"  ~ 0,\n                           estudante == \"Yes\" ~ 1\n                          )) \n\nstr(credito)\nsummary(credito)\n\n```\n\n\n## Treino e Teste\n\n```{r conjuntos-treino-teste}\nlibrary(caret)\nset.seed(21)\ny <- credito$inadimplente\nindice_teste <- createDataPartition(y, times = 1, p = 0.2, list = FALSE)\n\nconj_treino <- credito %>% slice(-indice_teste)\nconj_teste <- credito %>% slice(indice_teste)\n\nsummary(conj_treino)\nsummary(conj_teste)\n\n```\n\n\n## Matriz de dispersão\n\n```{r splom}\nlibrary(psych)\npairs.panels(conj_treino, \n             method = \"pearson\", # metodo de correlação\n             hist.col = \"#00AFBB\",\n             density = TRUE,  # mostra graficos de densidade\n             ellipses = FALSE # mostra elipses de correlação\n             )\n\n```\n\n\n## Avaliando o comportamento das variáveis em função do status (inadimplente / estudante)\n\n\n```{r box-plot}\nggplot(conj_treino, aes(x=inadimplente, y=balanco)) +\n  geom_boxplot()\nggplot(conj_treino, aes(x=inadimplente, y=receita)) +\n  geom_boxplot()\nggplot(conj_treino, aes(x=as.factor(estudante), y=balanco)) +\n  geom_boxplot()\nggplot(conj_treino, aes(x=as.factor(estudante), y=receita)) +\n  geom_boxplot()\n\n\n```\n\n\n## Balanço vs Receita\n\n\n```{r dispersao}\nggplot(data = conj_treino, aes(x=balanco,  y = receita, col = inadimplente)) +\n  geom_point() \n```\n\n\n## Regressão Linear?\n\n```{r reg-linear}\n## Primeiro precisa transformar qualitativa em numérica\ninadimpl <- as.numeric(conj_treino$inadimplente) - 1\nmodelo_linear <- lm(inadimpl ~ balanco, data = conj_treino)\nplot(inadimpl ~ balanco, data = conj_treino, \n     col = \"darkorange\", pch = \"|\", ylim = c(-0.2, 1),\n     main = \"Regressão Linear - Classificação\")\nabline(h = 0, lty = 3)\nabline(h = 1, lty = 3)\nabline(h = 0.5, lty = 2)\nabline(modelo_linear, lwd = 3, col = \"dodgerblue\")\n```\n\n## Outras avaliações\n\n```{r 1avaliacao}\n# proporção de inadimplentes\nconj_treino %>% select(inadimplente, balanco) %>% summarize(prop = mean(inadimplente == \"Sim\")) \n# media do balanço dos inadimplentes \nconj_treino %>% filter(inadimplente == \"Sim\") %>% summarize(valor= mean(balanco))   \nquantis <- quantile(conj_treino$balanco, probs = c(.1,.25, .50, .75, .9, .95, 0.97, 0.99))\nquantis\nconj_treino %>% \n            mutate(grupo_balanco = case_when(\n               balanco<=quantis[1] ~ quantis[1],\n               balanco>quantis[1] & balanco<=quantis[2] ~ quantis[2],\n               balanco>quantis[2] & balanco<=quantis[3]  ~ quantis[3],\n               balanco>quantis[3] & balanco<=quantis[4]  ~ quantis[4],\n               balanco>quantis[4] & balanco<=quantis[5]  ~ quantis[5],\n               balanco>quantis[5] & balanco<=quantis[6]  ~ quantis[6],\n               balanco>quantis[6] & balanco<=quantis[7]  ~ quantis[7],\n               balanco>quantis[7] ~ quantis[8])) %>%\n           group_by(grupo_balanco) %>%\n           summarize(prop = mean(inadimplente == \"Sim\")) %>%\n           ggplot(aes(grupo_balanco, prop)) +\n           geom_point() +\n           geom_line()\n```\n\n\n## 1a Regressão logística: só balanço\n\n```{r mod1}\nmod1 <- glm(inadimplente ~ balanco,data=conj_treino,family=binomial)\nsummary(mod1)\ncoef(mod1)\nsummary(mod1)$coef\n```\n\n## Avaliando o modelo\n\n```{r conj_teste}\np_chapeu <- predict(mod1, newdata = conj_teste, type = \"response\")\ny_chapeu <- ifelse(p_chapeu > 0.5, \"Sim\", \"Nao\") %>% factor(levels = levels(conj_teste$inadimplente))\nconfusionMatrix(y_chapeu, conj_teste$inadimplente, positive=\"Sim\") \n```\n\n## Veja as probabilidade de inadimplencia para balanços de 1000, 2000 e 3000\n\n```{r probabilidades}\npredict(mod1, newdata = data.frame(balanco = c(1000,2000,3000)), type=\"response\")\n```\n\n\n\n## Curva S\n\n```{r Curva_S}\ninadimpl <- as.numeric(conj_treino$inadimplente) - 1\nplot(inadimpl ~ balanco, data = conj_treino, \n     col = \"darkorange\", pch = \"|\", ylim = c(0, 1),\n     main = \"Regressão Logistica - Classificacão\")\nabline(h = 0, lty = 3)\nabline(h = 1, lty = 3)\nabline(h = 0.5, lty = 2)\ncurve(predict(mod1, data.frame(balanco = x),\n        type = \"response\"), add = TRUE, lwd = 3, col = \"dodgerblue\")\nabline(v = -coef(mod1)[1] / coef(mod1)[2], lwd = 2)\n\n```\n\n## Valor de balanço com probabilidade de 50%\n-$\\beta_0$/$\\beta_1$\n```{r}\n-coef(mod1)[1] / coef(mod1)[2]\n```\n\n\n\n## 2a Regressão logística: todas as variáveis \n\n```{r mod2}\nmod2 <- glm(inadimplente ~ balanco + receita + estudante,data=conj_treino,family=binomial)\nsummary(mod2)\ncoef(mod2)\nsummary(mod2)$coef\n```\n\n## É possível se ver que receita não é significativa\n\n## 3a Regressão Logística (sem receita)\n\n```{r mod3}\nmod3 <- glm(inadimplente ~ balanco + estudante,data=conj_treino,family=binomial)\nsummary(mod3)\ncoef(mod3)\nsummary(mod3)$coef\n```\n\n## Avaliando o modelo novamente\n\n```{r conj_teste2}\np_chapeu <- predict(mod3, newdata = conj_teste, type = \"response\")\ny_chapeu <- ifelse(p_chapeu > 0.5, \"Sim\", \"Nao\") %>% factor(levels = levels(conj_teste$inadimplente))\nconfusionMatrix(y_chapeu, conj_teste$inadimplente, positive=\"Sim\") \n```\n\n\n## Mudando a probabilidade (limite) para aumentar a sensibilidade\n\n```{r novo_limite}\np_chapeu <- predict(mod3, newdata = conj_teste, type = \"response\")\ny_chapeu <- ifelse(p_chapeu > 0.1, \"Sim\", \"Nao\") %>% \n             factor(levels = levels(conj_teste$inadimplente))\nconfusionMatrix(y_chapeu, conj_teste$inadimplente, positive=\"Sim\")\n```\n\n\n\n\n## Curva ROC modelo só com balanço\n\n```{r ROC}\nlibrary(pROC)\np_chapeu_log <- predict(mod1, newdata = conj_teste, type = \"response\")\nhead(p_chapeu_log)\nroc_log <- roc(conj_teste$inadimplente ~ p_chapeu_log, plot = TRUE, print.auc=FALSE, legacy.axes=TRUE)\n\n# Area debaixo da curva\nas.numeric(roc_log$auc)\n```\n\n\n## Curva ROC 2: Modelo com balanço + estudante\n\n```{r ROC2}\np_chapeu_log <- predict(mod3, newdata = conj_teste, type = \"response\")\nhead(p_chapeu_log)\nroc_log2 <- roc(conj_teste$inadimplente ~ p_chapeu_log, plot = TRUE, print.auc=FALSE, legacy.axes=TRUE)\n\n# Area debaixo da curva\nas.numeric(roc_log2$auc)\n```\n\n## Duas ROCs juntas\n\n```{r ROCs}\nplot(roc_log)\nplot(roc_log2, add=TRUE, col=\"blue\")\nlegend(\"bottomright\", legend=c(\"Mod 1\", \"Mod2\"),\n       col=c(par(\"fg\"), \"blue\"), lwd=2)\n```\n\n\n## Curva ROC 3 com o KNN\n\n```{r ROC3}\n# Ajustando KNN \nset.seed(21)\nctrl <- trainControl(method = \"cv\")\ntreina_knn <- train(inadimplente ~ scale(balanco) + scale(estudante), method = \"knn\", trControl= ctrl, tuneGrid = data.frame(k = seq(5,140, by=4)), data = conj_treino)\n# treina_knn\nplot(treina_knn)\nprev_knn <- predict(treina_knn, conj_teste,type = \"prob\")\n\n## ROC\nroc_log2 <- roc(conj_teste$inadimplente ~ p_chapeu_log, plot = TRUE, print.auc=FALSE, col= \"black\", legacy.axes=TRUE) \nroc_knn1 <- roc(conj_teste$inadimplente ~ prev_knn[,2], plot = TRUE, print.auc=FALSE, col=\"green\", legacy.axes=TRUE, add=TRUE)\n\nlegend(\"bottomright\",legend=c(\"Reg. Log\", \"KNN\"), \n       col=c(\"black\",\"green\"),lwd=4)\n\n# Area abaixo da curva\n# Regressão Logística\nas.numeric(roc_log2$auc)\n## KNN\nas.numeric(roc_knn1$auc)\n\n```\n\n\n"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":"auto","echo":true,"output":{"html_document":{"toc":"yes","code_download":"yes"}},"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-yaml":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"wrap","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"output-file":"Aula09.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.0.38","editor":"visual","theme":{"light":["cosmo","../theme.scss"],"dark":["cosmo","../theme-dark.scss"]},"mainfont":"Atkinson Hyperlegible","code-copy":true,"title":"Regressão Logística","author":"Ricardo Accioly","date":"`r Sys.Date()`"},"extensions":{"book":{"multiFile":true}}}}}