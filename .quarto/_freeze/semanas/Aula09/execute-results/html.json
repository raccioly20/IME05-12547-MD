{
  "hash": "2d9d9ffadd72e0a1170dd91a1b2591d3",
  "result": {
    "markdown": "---\ntitle: \"Regressão Logística\"\nauthor: \"Ricardo Accioly\"\ndate: \"2022-08-12\"\noutput:\n html_document:\n    toc: yes\n    code_download: yes\n---\n\n\n\n\n## Carregando Bibliotecas\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ISLR)\ndata(Default)\nsummary(Default)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n default    student       balance           income     \n No :9667   No :7056   Min.   :   0.0   Min.   :  772  \n Yes: 333   Yes:2944   1st Qu.: 481.7   1st Qu.:21340  \n                       Median : 823.6   Median :34553  \n                       Mean   : 835.4   Mean   :33517  \n                       3rd Qu.:1166.3   3rd Qu.:43808  \n                       Max.   :2654.3   Max.   :73554  \n```\n:::\n\n```{.r .cell-code}\nstr(Default)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n'data.frame':\t10000 obs. of  4 variables:\n $ default: Factor w/ 2 levels \"No\",\"Yes\": 1 1 1 1 1 1 1 1 1 1 ...\n $ student: Factor w/ 2 levels \"No\",\"Yes\": 1 2 1 1 1 2 1 2 1 1 ...\n $ balance: num  730 817 1074 529 786 ...\n $ income : num  44362 12106 31767 35704 38463 ...\n```\n:::\n\n```{.r .cell-code}\nhead(Default)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  default student   balance    income\n1      No      No  729.5265 44361.625\n2      No     Yes  817.1804 12106.135\n3      No      No 1073.5492 31767.139\n4      No      No  529.2506 35704.494\n5      No      No  785.6559 38463.496\n6      No     Yes  919.5885  7491.559\n```\n:::\n:::\n\n\n## Manipulando os dados\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncredito <- tibble(Default)\nsummary(credito)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n default    student       balance           income     \n No :9667   No :7056   Min.   :   0.0   Min.   :  772  \n Yes: 333   Yes:2944   1st Qu.: 481.7   1st Qu.:21340  \n                       Median : 823.6   Median :34553  \n                       Mean   : 835.4   Mean   :33517  \n                       3rd Qu.:1166.3   3rd Qu.:43808  \n                       Max.   :2654.3   Max.   :73554  \n```\n:::\n\n```{.r .cell-code}\n# renomeando colunas\ncredito <- credito %>% \n                rename( inadimplente = default, estudante = student, balanco = balance,\n                receita = income)\ncredito <- credito %>% mutate( inadimplente =  case_when(\n                           inadimplente == \"No\"  ~ \"Nao\",\n                           inadimplente == \"Yes\" ~ \"Sim\"\n                          )) %>% mutate(inadimplente = factor(inadimplente))\ncredito <- credito %>% mutate( estudante =  case_when(\n                           estudante == \"No\"  ~ 0,\n                           estudante == \"Yes\" ~ 1\n                          )) \n\nstr(credito)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\ntibble [10,000 × 4] (S3: tbl_df/tbl/data.frame)\n $ inadimplente: Factor w/ 2 levels \"Nao\",\"Sim\": 1 1 1 1 1 1 1 1 1 1 ...\n $ estudante   : num [1:10000] 0 1 0 0 0 1 0 1 0 0 ...\n $ balanco     : num [1:10000] 730 817 1074 529 786 ...\n $ receita     : num [1:10000] 44362 12106 31767 35704 38463 ...\n```\n:::\n\n```{.r .cell-code}\nsummary(credito)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n inadimplente   estudante         balanco          receita     \n Nao:9667     Min.   :0.0000   Min.   :   0.0   Min.   :  772  \n Sim: 333     1st Qu.:0.0000   1st Qu.: 481.7   1st Qu.:21340  \n              Median :0.0000   Median : 823.6   Median :34553  \n              Mean   :0.2944   Mean   : 835.4   Mean   :33517  \n              3rd Qu.:1.0000   3rd Qu.:1166.3   3rd Qu.:43808  \n              Max.   :1.0000   Max.   :2654.3   Max.   :73554  \n```\n:::\n:::\n\n\n\n## Treino e Teste\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(caret)\nset.seed(21)\ny <- credito$inadimplente\nindice_teste <- createDataPartition(y, times = 1, p = 0.2, list = FALSE)\n\nconj_treino <- credito %>% slice(-indice_teste)\nconj_teste <- credito %>% slice(indice_teste)\n\nsummary(conj_treino)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n inadimplente   estudante         balanco          receita     \n Nao:7733     Min.   :0.0000   Min.   :   0.0   Min.   :  772  \n Sim: 266     1st Qu.:0.0000   1st Qu.: 481.3   1st Qu.:21339  \n              Median :0.0000   Median : 819.1   Median :34541  \n              Mean   :0.2953   Mean   : 832.7   Mean   :33541  \n              3rd Qu.:1.0000   3rd Qu.:1167.1   3rd Qu.:43840  \n              Max.   :1.0000   Max.   :2654.3   Max.   :73554  \n```\n:::\n\n```{.r .cell-code}\nsummary(conj_teste)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n inadimplente   estudante         balanco          receita     \n Nao:1934     Min.   :0.0000   Min.   :   0.0   Min.   : 4755  \n Sim:  67     1st Qu.:0.0000   1st Qu.: 483.5   1st Qu.:21371  \n              Median :0.0000   Median : 836.6   Median :34591  \n              Mean   :0.2909   Mean   : 846.2   Mean   :33423  \n              3rd Qu.:1.0000   3rd Qu.:1163.1   3rd Qu.:43646  \n              Max.   :1.0000   Max.   :2461.5   Max.   :71239  \n```\n:::\n:::\n\n\n\n## Matriz de dispersão\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(psych)\npairs.panels(conj_treino, \n             method = \"pearson\", # metodo de correlação\n             hist.col = \"#00AFBB\",\n             density = TRUE,  # mostra graficos de densidade\n             ellipses = FALSE # mostra elipses de correlação\n             )\n```\n\n::: {.cell-output-display}\n![](imagens/Aula09/splom-1.png){width=864}\n:::\n:::\n\n\n\n## Avaliando o comportamento das variáveis em função do status (inadimplente / estudante)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(conj_treino, aes(x=inadimplente, y=balanco)) +\n  geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](imagens/Aula09/box-plot-1.png){width=864}\n:::\n\n```{.r .cell-code}\nggplot(conj_treino, aes(x=inadimplente, y=receita)) +\n  geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](imagens/Aula09/box-plot-2.png){width=864}\n:::\n\n```{.r .cell-code}\nggplot(conj_treino, aes(x=as.factor(estudante), y=balanco)) +\n  geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](imagens/Aula09/box-plot-3.png){width=864}\n:::\n\n```{.r .cell-code}\nggplot(conj_treino, aes(x=as.factor(estudante), y=receita)) +\n  geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](imagens/Aula09/box-plot-4.png){width=864}\n:::\n:::\n\n\n\n## Balanço vs Receita\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = conj_treino, aes(x=balanco,  y = receita, col = inadimplente)) +\n  geom_point() \n```\n\n::: {.cell-output-display}\n![](imagens/Aula09/dispersao-1.png){width=864}\n:::\n:::\n\n\n\n## Regressão Linear?\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## Primeiro precisa transformar qualitativa em numérica\ninadimpl <- as.numeric(conj_treino$inadimplente) - 1\nmodelo_linear <- lm(inadimpl ~ balanco, data = conj_treino)\nplot(inadimpl ~ balanco, data = conj_treino, \n     col = \"darkorange\", pch = \"|\", ylim = c(-0.2, 1),\n     main = \"Regressão Linear - Classificação\")\nabline(h = 0, lty = 3)\nabline(h = 1, lty = 3)\nabline(h = 0.5, lty = 2)\nabline(modelo_linear, lwd = 3, col = \"dodgerblue\")\n```\n\n::: {.cell-output-display}\n![](imagens/Aula09/reg-linear-1.png){width=864}\n:::\n:::\n\n\n## Outras avaliações\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# proporção de inadimplentes\nconj_treino %>% select(inadimplente, balanco) %>% summarize(prop = mean(inadimplente == \"Sim\")) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 1\n    prop\n   <dbl>\n1 0.0333\n```\n:::\n\n```{.r .cell-code}\n# media do balanço dos inadimplentes \nconj_treino %>% filter(inadimplente == \"Sim\") %>% summarize(valor= mean(balanco))   \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 1\n  valor\n  <dbl>\n1 1745.\n```\n:::\n\n```{.r .cell-code}\nquantis <- quantile(conj_treino$balanco, probs = c(.1,.25, .50, .75, .9, .95, 0.97, 0.99))\nquantis\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      10%       25%       50%       75%       90%       95%       97%       99% \n 176.9895  481.2830  819.1118 1167.1059 1468.8300 1660.1834 1786.5132 1991.6971 \n```\n:::\n\n```{.r .cell-code}\nconj_treino %>% \n            mutate(grupo_balanco = case_when(\n               balanco<=quantis[1] ~ quantis[1],\n               balanco>quantis[1] & balanco<=quantis[2] ~ quantis[2],\n               balanco>quantis[2] & balanco<=quantis[3]  ~ quantis[3],\n               balanco>quantis[3] & balanco<=quantis[4]  ~ quantis[4],\n               balanco>quantis[4] & balanco<=quantis[5]  ~ quantis[5],\n               balanco>quantis[5] & balanco<=quantis[6]  ~ quantis[6],\n               balanco>quantis[6] & balanco<=quantis[7]  ~ quantis[7],\n               balanco>quantis[7] ~ quantis[8])) %>%\n           group_by(grupo_balanco) %>%\n           summarize(prop = mean(inadimplente == \"Sim\")) %>%\n           ggplot(aes(grupo_balanco, prop)) +\n           geom_point() +\n           geom_line()\n```\n\n::: {.cell-output-display}\n![](imagens/Aula09/1avaliacao-1.png){width=864}\n:::\n:::\n\n\n\n## 1a Regressão logística: só balanço\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmod1 <- glm(inadimplente ~ balanco,data=conj_treino,family=binomial)\nsummary(mod1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nglm(formula = inadimplente ~ balanco, family = binomial, data = conj_treino)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-2.3119  -0.1453  -0.0568  -0.0211   3.7748  \n\nCoefficients:\n              Estimate Std. Error z value Pr(>|z|)    \n(Intercept) -1.077e+01  4.119e-01  -26.16   <2e-16 ***\nbalanco      5.593e-03  2.521e-04   22.18   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 2333.8  on 7998  degrees of freedom\nResidual deviance: 1268.0  on 7997  degrees of freedom\nAIC: 1272\n\nNumber of Fisher Scoring iterations: 8\n```\n:::\n\n```{.r .cell-code}\ncoef(mod1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  (Intercept)       balanco \n-10.772870680   0.005593346 \n```\n:::\n\n```{.r .cell-code}\nsummary(mod1)$coef\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                 Estimate   Std. Error   z value      Pr(>|z|)\n(Intercept) -10.772870680 0.4118820840 -26.15523 8.593630e-151\nbalanco       0.005593346 0.0002521341  22.18401 4.901112e-109\n```\n:::\n:::\n\n\n## Avaliando o modelo\n\n\n::: {.cell}\n\n```{.r .cell-code}\np_chapeu <- predict(mod1, newdata = conj_teste, type = \"response\")\ny_chapeu <- ifelse(p_chapeu > 0.5, \"Sim\", \"Nao\") %>% factor(levels = levels(conj_teste$inadimplente))\nconfusionMatrix(y_chapeu, conj_teste$inadimplente, positive=\"Sim\") \n```\n\n::: {.cell-output .cell-output-stdout}\n```\nConfusion Matrix and Statistics\n\n          Reference\nPrediction  Nao  Sim\n       Nao 1922   41\n       Sim   12   26\n                                          \n               Accuracy : 0.9735          \n                 95% CI : (0.9655, 0.9801)\n    No Information Rate : 0.9665          \n    P-Value [Acc > NIR] : 0.04298         \n                                          \n                  Kappa : 0.4827          \n                                          \n Mcnemar's Test P-Value : 0.00012         \n                                          \n            Sensitivity : 0.38806         \n            Specificity : 0.99380         \n         Pos Pred Value : 0.68421         \n         Neg Pred Value : 0.97911         \n             Prevalence : 0.03348         \n         Detection Rate : 0.01299         \n   Detection Prevalence : 0.01899         \n      Balanced Accuracy : 0.69093         \n                                          \n       'Positive' Class : Sim             \n                                          \n```\n:::\n:::\n\n\n## Veja as probabilidade de inadimplencia para balanços de 1000, 2000 e 3000\n\n\n::: {.cell}\n\n```{.r .cell-code}\npredict(mod1, newdata = data.frame(balanco = c(1000,2000,3000)), type=\"response\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n          1           2           3 \n0.005599153 0.602003608 0.997544989 \n```\n:::\n:::\n\n\n\n\n## Curva S\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninadimpl <- as.numeric(conj_treino$inadimplente) - 1\nplot(inadimpl ~ balanco, data = conj_treino, \n     col = \"darkorange\", pch = \"|\", ylim = c(0, 1),\n     main = \"Regressão Logistica - Classificacão\")\nabline(h = 0, lty = 3)\nabline(h = 1, lty = 3)\nabline(h = 0.5, lty = 2)\ncurve(predict(mod1, data.frame(balanco = x),\n        type = \"response\"), add = TRUE, lwd = 3, col = \"dodgerblue\")\nabline(v = -coef(mod1)[1] / coef(mod1)[2], lwd = 2)\n```\n\n::: {.cell-output-display}\n![](imagens/Aula09/Curva_S-1.png){width=864}\n:::\n:::\n\n\n## Valor de balanço com probabilidade de 50%\n-$\\beta_0$/$\\beta_1$\n\n::: {.cell}\n\n```{.r .cell-code}\n-coef(mod1)[1] / coef(mod1)[2]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n(Intercept) \n   1926.016 \n```\n:::\n:::\n\n\n\n\n## 2a Regressão logística: todas as variáveis \n\n\n::: {.cell}\n\n```{.r .cell-code}\nmod2 <- glm(inadimplente ~ balanco + receita + estudante,data=conj_treino,family=binomial)\nsummary(mod2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nglm(formula = inadimplente ~ balanco + receita + estudante, family = binomial, \n    data = conj_treino)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-2.5314  -0.1409  -0.0535  -0.0192   3.7500  \n\nCoefficients:\n              Estimate Std. Error z value Pr(>|z|)    \n(Intercept) -1.123e+01  5.684e-01 -19.763   <2e-16 ***\nbalanco      5.842e-03  2.661e-04  21.955   <2e-16 ***\nreceita      8.476e-06  9.253e-06   0.916   0.3597    \nestudante   -5.106e-01  2.671e-01  -1.912   0.0559 .  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 2333.8  on 7998  degrees of freedom\nResidual deviance: 1248.2  on 7995  degrees of freedom\nAIC: 1256.2\n\nNumber of Fisher Scoring iterations: 8\n```\n:::\n\n```{.r .cell-code}\ncoef(mod2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  (Intercept)       balanco       receita     estudante \n-1.123321e+01  5.842417e-03  8.475971e-06 -5.106360e-01 \n```\n:::\n\n```{.r .cell-code}\nsummary(mod2)$coef\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                 Estimate   Std. Error     z value      Pr(>|z|)\n(Intercept) -1.123321e+01 5.683883e-01 -19.7632675  6.167980e-87\nbalanco      5.842417e-03 2.661065e-04  21.9551820 7.727138e-107\nreceita      8.475971e-06 9.253027e-06   0.9160214  3.596557e-01\nestudante   -5.106360e-01 2.671246e-01  -1.9116025  5.592720e-02\n```\n:::\n:::\n\n\n## É possível se ver que receita não é significativa\n\n## 3a Regressão Logística (sem receita)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmod3 <- glm(inadimplente ~ balanco + estudante,data=conj_treino,family=binomial)\nsummary(mod3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nglm(formula = inadimplente ~ balanco + estudante, family = binomial, \n    data = conj_treino)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-2.4991  -0.1410  -0.0535  -0.0192   3.7631  \n\nCoefficients:\n              Estimate Std. Error z value Pr(>|z|)    \n(Intercept) -1.089e+01  4.220e-01  -25.81  < 2e-16 ***\nbalanco      5.842e-03  2.658e-04   21.98  < 2e-16 ***\nestudante   -7.016e-01  1.655e-01   -4.24 2.23e-05 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 2333.8  on 7998  degrees of freedom\nResidual deviance: 1249.1  on 7996  degrees of freedom\nAIC: 1255.1\n\nNumber of Fisher Scoring iterations: 8\n```\n:::\n\n```{.r .cell-code}\ncoef(mod3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  (Intercept)       balanco     estudante \n-10.891361318   0.005842385  -0.701581567 \n```\n:::\n\n```{.r .cell-code}\nsummary(mod3)$coef\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                 Estimate   Std. Error    z value      Pr(>|z|)\n(Intercept) -10.891361318 0.4220005414 -25.808880 7.048822e-147\nbalanco       0.005842385 0.0002658371  21.977315 4.747239e-107\nestudante    -0.701581567 0.1654530947  -4.240365  2.231563e-05\n```\n:::\n:::\n\n\n## Avaliando o modelo novamente\n\n\n::: {.cell}\n\n```{.r .cell-code}\np_chapeu <- predict(mod3, newdata = conj_teste, type = \"response\")\ny_chapeu <- ifelse(p_chapeu > 0.5, \"Sim\", \"Nao\") %>% factor(levels = levels(conj_teste$inadimplente))\nconfusionMatrix(y_chapeu, conj_teste$inadimplente, positive=\"Sim\") \n```\n\n::: {.cell-output .cell-output-stdout}\n```\nConfusion Matrix and Statistics\n\n          Reference\nPrediction  Nao  Sim\n       Nao 1924   37\n       Sim   10   30\n                                          \n               Accuracy : 0.9765          \n                 95% CI : (0.9689, 0.9827)\n    No Information Rate : 0.9665          \n    P-Value [Acc > NIR] : 0.0056579       \n                                          \n                  Kappa : 0.5495          \n                                          \n Mcnemar's Test P-Value : 0.0001491       \n                                          \n            Sensitivity : 0.44776         \n            Specificity : 0.99483         \n         Pos Pred Value : 0.75000         \n         Neg Pred Value : 0.98113         \n             Prevalence : 0.03348         \n         Detection Rate : 0.01499         \n   Detection Prevalence : 0.01999         \n      Balanced Accuracy : 0.72130         \n                                          \n       'Positive' Class : Sim             \n                                          \n```\n:::\n:::\n\n\n\n## Mudando a probabilidade (limite) para aumentar a sensibilidade\n\n\n::: {.cell}\n\n```{.r .cell-code}\np_chapeu <- predict(mod3, newdata = conj_teste, type = \"response\")\ny_chapeu <- ifelse(p_chapeu > 0.1, \"Sim\", \"Nao\") %>% \n             factor(levels = levels(conj_teste$inadimplente))\nconfusionMatrix(y_chapeu, conj_teste$inadimplente, positive=\"Sim\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nConfusion Matrix and Statistics\n\n          Reference\nPrediction  Nao  Sim\n       Nao 1809   18\n       Sim  125   49\n                                          \n               Accuracy : 0.9285          \n                 95% CI : (0.9164, 0.9394)\n    No Information Rate : 0.9665          \n    P-Value [Acc > NIR] : 1               \n                                          \n                  Kappa : 0.3765          \n                                          \n Mcnemar's Test P-Value : <2e-16          \n                                          \n            Sensitivity : 0.73134         \n            Specificity : 0.93537         \n         Pos Pred Value : 0.28161         \n         Neg Pred Value : 0.99015         \n             Prevalence : 0.03348         \n         Detection Rate : 0.02449         \n   Detection Prevalence : 0.08696         \n      Balanced Accuracy : 0.83336         \n                                          \n       'Positive' Class : Sim             \n                                          \n```\n:::\n:::\n\n\n\n\n\n## Curva ROC modelo só com balanço\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(pROC)\np_chapeu_log <- predict(mod1, newdata = conj_teste, type = \"response\")\nhead(p_chapeu_log)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n           1            2            3            4            5            6 \n1.897038e-02 7.892012e-05 2.096006e-05 1.087093e-02 3.336139e-04 2.580431e-04 \n```\n:::\n\n```{.r .cell-code}\nroc_log <- roc(conj_teste$inadimplente ~ p_chapeu_log, plot = TRUE, print.auc=FALSE, legacy.axes=TRUE)\n```\n\n::: {.cell-output-display}\n![](imagens/Aula09/ROC-1.png){width=864}\n:::\n\n```{.r .cell-code}\n# Area debaixo da curva\nas.numeric(roc_log$auc)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.9389557\n```\n:::\n:::\n\n\n\n## Curva ROC 2: Modelo com balanço + estudante\n\n\n::: {.cell}\n\n```{.r .cell-code}\np_chapeu_log <- predict(mod3, newdata = conj_teste, type = \"response\")\nhead(p_chapeu_log)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n           1            2            3            4            5            6 \n1.140962e-02 7.436487e-05 1.861803e-05 6.355948e-03 3.351978e-04 1.271000e-04 \n```\n:::\n\n```{.r .cell-code}\nroc_log2 <- roc(conj_teste$inadimplente ~ p_chapeu_log, plot = TRUE, print.auc=FALSE, legacy.axes=TRUE)\n```\n\n::: {.cell-output-display}\n![](imagens/Aula09/ROC2-1.png){width=864}\n:::\n\n```{.r .cell-code}\n# Area debaixo da curva\nas.numeric(roc_log2$auc)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.9415487\n```\n:::\n:::\n\n\n## Duas ROCs juntas\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(roc_log)\nplot(roc_log2, add=TRUE, col=\"blue\")\nlegend(\"bottomright\", legend=c(\"Mod 1\", \"Mod2\"),\n       col=c(par(\"fg\"), \"blue\"), lwd=2)\n```\n\n::: {.cell-output-display}\n![](imagens/Aula09/ROCs-1.png){width=864}\n:::\n:::\n\n\n\n## Curva ROC 3 com o KNN\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Ajustando KNN \nset.seed(21)\nctrl <- trainControl(method = \"cv\")\ntreina_knn <- train(inadimplente ~ scale(balanco) + scale(estudante), method = \"knn\", trControl= ctrl, tuneGrid = data.frame(k = seq(5,140, by=4)), data = conj_treino)\n# treina_knn\nplot(treina_knn)\n```\n\n::: {.cell-output-display}\n![](imagens/Aula09/ROC3-1.png){width=864}\n:::\n\n```{.r .cell-code}\nprev_knn <- predict(treina_knn, conj_teste,type = \"prob\")\n\n## ROC\nroc_log2 <- roc(conj_teste$inadimplente ~ p_chapeu_log, plot = TRUE, print.auc=FALSE, col= \"black\", legacy.axes=TRUE) \nroc_knn1 <- roc(conj_teste$inadimplente ~ prev_knn[,2], plot = TRUE, print.auc=FALSE, col=\"green\", legacy.axes=TRUE, add=TRUE)\n\nlegend(\"bottomright\",legend=c(\"Reg. Log\", \"KNN\"), \n       col=c(\"black\",\"green\"),lwd=4)\n```\n\n::: {.cell-output-display}\n![](imagens/Aula09/ROC3-2.png){width=864}\n:::\n\n```{.r .cell-code}\n# Area abaixo da curva\n# Regressão Logística\nas.numeric(roc_log2$auc)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.9415487\n```\n:::\n\n```{.r .cell-code}\n## KNN\nas.numeric(roc_knn1$auc)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.9388361\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}