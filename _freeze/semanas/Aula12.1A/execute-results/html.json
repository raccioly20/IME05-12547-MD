{
  "hash": "38e9a61d6ef5acdd53da8dea2e521c0b",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Arvores de Classificação - XGBoost\"\nauthor: \"Ricardo Accioly\"\ndate: \"2024-11-24\"\nexecute: \n  echo: true\n  warning: false\n  message: false\n  freeze: auto\nformat:\n html:\n    code-link: true\n    fig-height: 10\n    fig-width: 10\n    fig-align: center\n    fig-dpi: 300\nknitr: \n  opts_chunk: \n    out.width: 90%\n    fig.showtext: true\n    collapese: true\n---\n\n\n\n## Carregando Bibliotecas\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(xgboost)\nlibrary(e1071)\nlibrary(ISLR)\ndata(Default)\nsummary(Default)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n default    student       balance           income     \n No :9667   No :7056   Min.   :   0.0   Min.   :  772  \n Yes: 333   Yes:2944   1st Qu.: 481.7   1st Qu.:21340  \n                       Median : 823.6   Median :34553  \n                       Mean   : 835.4   Mean   :33517  \n                       3rd Qu.:1166.3   3rd Qu.:43808  \n                       Max.   :2654.3   Max.   :73554  \n```\n\n\n:::\n\n```{.r .cell-code}\nstr(Default)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n'data.frame':\t10000 obs. of  4 variables:\n $ default: Factor w/ 2 levels \"No\",\"Yes\": 1 1 1 1 1 1 1 1 1 1 ...\n $ student: Factor w/ 2 levels \"No\",\"Yes\": 1 2 1 1 1 2 1 2 1 1 ...\n $ balance: num  730 817 1074 529 786 ...\n $ income : num  44362 12106 31767 35704 38463 ...\n```\n\n\n:::\n\n```{.r .cell-code}\nhead(Default)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  default student   balance    income\n1      No      No  729.5265 44361.625\n2      No     Yes  817.1804 12106.135\n3      No      No 1073.5492 31767.139\n4      No      No  529.2506 35704.494\n5      No      No  785.6559 38463.496\n6      No     Yes  919.5885  7491.559\n```\n\n\n:::\n:::\n\n\n\n## Manipulando os dados\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncredito <- tibble(Default)\nsummary(credito)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n default    student       balance           income     \n No :9667   No :7056   Min.   :   0.0   Min.   :  772  \n Yes: 333   Yes:2944   1st Qu.: 481.7   1st Qu.:21340  \n                       Median : 823.6   Median :34553  \n                       Mean   : 835.4   Mean   :33517  \n                       3rd Qu.:1166.3   3rd Qu.:43808  \n                       Max.   :2654.3   Max.   :73554  \n```\n\n\n:::\n\n```{.r .cell-code}\n# renomeando colunas\ncredito <- credito %>% \n                rename( inadimplente = default, estudante = student, balanco = balance,\n                receita = income)\ncredito <- credito %>% mutate( inadimplente =  case_when(\n                           inadimplente == \"No\"  ~ \"Nao\",\n                           inadimplente == \"Yes\" ~ \"Sim\"\n                          )) %>% mutate(inadimplente = factor(inadimplente))\ncredito <- credito %>% mutate( estudante =  case_when(\n                           estudante == \"No\"  ~ 0,\n                           estudante == \"Yes\" ~ 1\n                          )) \n```\n:::\n\n\n\n## Treino e Teste\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidymodels)\nset.seed(23)\n\ncredito_split <- initial_validation_split(credito, c(0.6, 0.2), strata = inadimplente)\n\ncredito_split\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n<Training/Validation/Testing/Total>\n<6000/2000/2000/10000>\n```\n\n\n:::\n\n```{.r .cell-code}\nconj_treino <- training(credito_split)\nconj_validacao <- validation(credito_split)\nconj_teste <- testing(credito_split)\n\nX_treino <- data.matrix(conj_treino[,-1])               \ny_treino <- as.integer(conj_treino$inadimplente) - 1\n\nX_valid <- data.matrix(conj_validacao[,-1])\ny_valid <- as.integer(conj_validacao$inadimplente) - 1\n  \nX_teste <- data.matrix(conj_teste[,-1])\ny_teste <- as.integer(conj_teste$inadimplente) - 1\n\nxgboost_treino <- xgb.DMatrix(data=X_treino, label=y_treino)\nxgboost_valid <- xgb.DMatrix(data=X_valid, label=y_valid)\nxgboost_teste <- xgb.DMatrix(data=X_teste, label=y_teste)\n```\n:::\n\n\n\n## Modelo\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnum_class <-  length(levels(credito$inadimplente))\nparams <- list(\n  booster=\"gbtree\",\n  eta=0.001,\n  max_depth=5,\n  gamma=3,\n  subsample=0.75,\n  colsample_bytree=1,\n  objective=\"multi:softprob\",\n  eval_metric=\"mlogloss\",\n  num_class=num_class\n)\n\nxgb.ajuste <- xgb.train(\n  params=params,\n  data=xgboost_treino,\n  nrounds=8000,\n  early_stopping_rounds=10,\n  watchlist=list(val1=xgboost_valid),\n  verbose=0\n)\n# Modelo\nsummary(xgb.ajuste)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                Length   Class              Mode       \nhandle                 1 xgb.Booster.handle externalptr\nraw             23580711 -none-             raw        \nbest_iteration         1 -none-             numeric    \nbest_ntreelimit        1 -none-             numeric    \nbest_score             1 -none-             numeric    \nbest_msg               1 -none-             character  \nniter                  1 -none-             numeric    \nevaluation_log         2 data.table         list       \ncall                   7 -none-             call       \nparams                10 -none-             list       \ncallbacks              2 -none-             list       \nfeature_names          3 -none-             character  \nnfeatures              1 -none-             numeric    \n```\n\n\n:::\n:::\n\n\n\n## Importancia das variáveis\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nimportancia <- xgb.importance(model = xgb.ajuste)\nimportancia\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     Feature        Gain      Cover  Frequency\n      <char>       <num>      <num>      <num>\n1:   balanco 0.930153227 0.93838451 0.76016437\n2:   receita 0.062373198 0.05146610 0.21204022\n3: estudante 0.007473574 0.01014939 0.02779541\n```\n\n\n:::\n\n```{.r .cell-code}\nxgb.plot.importance(importancia)\n```\n\n::: {.cell-output-display}\n![](Aula12.1A_files/figure-html/unnamed-chunk-2-1.png){width=90%}\n:::\n:::\n\n\n\n\n## Previsões\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nxgb.prev <- predict(xgb.ajuste,xgboost_teste,reshape=T)\nxgb.prev <- as.data.frame(xgb.prev)\ncolnames(xgb.prev) <- levels(credito$inadimplente)\n```\n:::\n\n\n\n\n\n\n## Classificação\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(caret)\ny_chapeu <- ifelse(xgb.prev[, 2] > 0.5, \"Sim\", \"Nao\") %>% \n             factor(levels = levels(conj_teste$inadimplente))\nconfusionMatrix(data = y_chapeu, reference = conj_teste$inadimplente,  positive=\"Sim\") \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nConfusion Matrix and Statistics\n\n          Reference\nPrediction  Nao  Sim\n       Nao 1926   46\n       Sim    3   25\n                                          \n               Accuracy : 0.9755          \n                 95% CI : (0.9677, 0.9818)\n    No Information Rate : 0.9645          \n    P-Value [Acc > NIR] : 0.003226        \n                                          \n                  Kappa : 0.4949          \n                                          \n Mcnemar's Test P-Value : 1.973e-09       \n                                          \n            Sensitivity : 0.3521          \n            Specificity : 0.9984          \n         Pos Pred Value : 0.8929          \n         Neg Pred Value : 0.9767          \n             Prevalence : 0.0355          \n         Detection Rate : 0.0125          \n   Detection Prevalence : 0.0140          \n      Balanced Accuracy : 0.6753          \n                                          \n       'Positive' Class : Sim             \n                                          \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(pROC)\nroc_xgboost <- roc(conj_teste$inadimplente ~ xgb.prev[,2], plot = TRUE, print.auc=FALSE, col=\"green\", legacy.axes=TRUE)\n```\n\n::: {.cell-output-display}\n![](Aula12.1A_files/figure-html/unnamed-chunk-5-1.png){width=90%}\n:::\n\n```{.r .cell-code}\nroc_xgboost$auc\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nArea under the curve: 0.9528\n```\n\n\n:::\n:::\n",
    "supporting": [
      "Aula12.1A_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}