{
  "hash": "82750153894fe2de2864baf901f048e9",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Classificação de Vendas com GBM\"\nauthor: \"\"\ndate: \"2025-05-30\"\nformat: html\neditor: visual\n---\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Pacotes necessários\nlibrary(ISLR)\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAnexando pacote: 'dplyr'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nOs seguintes objetos são mascarados por 'package:stats':\n\n    filter, lag\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nOs seguintes objetos são mascarados por 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(gbm)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoaded gbm 2.2.2\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThis version of gbm is no longer under development. Consider transitioning to gbm3, https://github.com/gbm-developers/gbm3\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(caret)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nCarregando pacotes exigidos: ggplot2\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nCarregando pacotes exigidos: lattice\n```\n\n\n:::\n:::\n\n\n## Carregamento e transformação dos dados\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Carregar dados\ndata(\"Carseats\")\n\n# Transformar Sales em variável binária\nCarseats <- Carseats %>%\n  mutate(HighSales = ifelse(Sales > 8, \"High\", \"Low\")) %>%\n  mutate(HighSales = as.factor(HighSales)) %>%\n  select(-Sales)  # Remover Sales original\n\n# Verificar distribuição\ntable(Carseats$HighSales)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nHigh  Low \n 164  236 \n```\n\n\n:::\n:::\n\n\n## Divisão dos dados em treino e teste\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(123)\ntrain_index <- createDataPartition(Carseats$HighSales, p = 0.8, list = FALSE)\ntrain_data <- Carseats[train_index, ]\ntest_data  <- Carseats[-train_index, ]\n```\n:::\n\n\n## Ajuste do modelo GBM com busca em grade\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(123)\n\n# Definir grade de parâmetros\ntune_grid <- expand.grid(\n  n.trees = c(100, 300, 500),\n  interaction.depth = c(1, 3, 5),\n  shrinkage = c(0.01, 0.1),\n  n.minobsinnode = c(5, 10)\n)\n\n# Treinamento com validação cruzada\nctrl <- trainControl(method = \"cv\", number = 5)\n\ngbm_caret <- train(\n  HighSales ~ .,\n  data = train_data,\n  method = \"gbm\",\n  distribution = \"bernoulli\",\n  trControl = ctrl,\n  tuneGrid = tune_grid,\n  verbose = FALSE\n)\n\n# Melhor modelo\ngbm_caret$bestTune\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   n.trees interaction.depth shrinkage n.minobsinnode\n20     300                 1       0.1              5\n```\n\n\n:::\n:::\n\n\n## Avaliação do melhor modelo\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Previsões\npred_class <- predict(gbm_caret, newdata = test_data)\n\n# Matriz de confusão\nconfusionMatrix(pred_class, test_data$HighSales)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nConfusion Matrix and Statistics\n\n          Reference\nPrediction High Low\n      High   24   2\n      Low     8  45\n                                          \n               Accuracy : 0.8734          \n                 95% CI : (0.7795, 0.9376)\n    No Information Rate : 0.5949          \n    P-Value [Acc > NIR] : 5.907e-08       \n                                          \n                  Kappa : 0.7293          \n                                          \n Mcnemar's Test P-Value : 0.1138          \n                                          \n            Sensitivity : 0.7500          \n            Specificity : 0.9574          \n         Pos Pred Value : 0.9231          \n         Neg Pred Value : 0.8491          \n             Prevalence : 0.4051          \n         Detection Rate : 0.3038          \n   Detection Prevalence : 0.3291          \n      Balanced Accuracy : 0.8537          \n                                          \n       'Positive' Class : High            \n                                          \n```\n\n\n:::\n:::\n\n\n## Importância das variáveis\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvarImp(gbm_caret)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\ngbm variable importance\n\n                 Overall\nPrice           100.0000\nShelveLocGood    60.6535\nAdvertising      51.4194\nCompPrice        49.5149\nAge              37.2180\nIncome           24.0622\nShelveLocMedium  11.3079\nPopulation        9.1811\nEducation         2.4845\nUrbanYes          0.6539\nUSYes             0.0000\n```\n\n\n:::\n:::\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}