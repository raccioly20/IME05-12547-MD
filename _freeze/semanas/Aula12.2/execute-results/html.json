{
  "hash": "33a21d6f52c06c0051af3c768009b563",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Arvores de Classificação - GBM\"\nauthor: \"Ricardo Accioly\"\ndate: \"2025-05-30\"\nexecute: \n  echo: true\n  warning: false\n  message: false\n  freeze: auto\nformat:\n html:\n    code-link: true\n    fig-height: 10\n    fig-width: 10\n    fig-align: center\n    fig-dpi: 300\nknitr: \n  opts_chunk: \n    out.width: 90%\n    fig.showtext: true\n    collapese: true\n---\n\n## Bibliotecas\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ISLR)\nlibrary(dplyr)\nlibrary(gbm)\nlibrary(caret)\nlibrary(pROC)\n```\n:::\n\n\n## Dados\n\nVamos começar a aplicar a metodologia de árvores usando **árvores de classificação** para analisar os dados existentes em `Carseats`. Este conjunto de dados (simulado) é sobre venda de assentos de criança para carros. Ele tem 400 observações das seguintes variáveis (11), cujos nomes serão convertidos para o português:\n\nSales: vendas em unidades (em mil) em cada local\n\nCompPrice: preço cobrado pelo competidor em cada local\n\nIncome: nível de renda da comunidade local (em mil US\\$)\n\nAdvertising: orçamento local de propaganda (em mil US\\$)\n\nPopulation: população na região (em mil)\n\nPrice: preço cobrado pela empresa em cada local\n\nShelveLoc: um fator com níveis Ruim, Bom e Medio indicando a qualidade da localização das prateleiras para os assentos em cada lugar\n\nAge: idade media da população local\n\nEducation: nível de educação em cada local\n\nUrban: um fator Sim e Não indicando se a loja esta em uma área urbana ou rural\n\nUS: um fator indicando se a loja é nos EUA ou não\n\nNeste dados, `Sales` é a variável resposta, só que ela é uma variável contínua, por este motivo vamos usá-la para criar uma variável binária. Vamos usar a função `ifelse()` para criar a variável binária, que chamaremos de **alta**, ela assume os valores `Sim` se `Sales` for maior que 8 e assume o valor `Não` caso contrário:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(Carseats)\nsummary(Carseats)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     Sales          CompPrice       Income        Advertising    \n Min.   : 0.000   Min.   : 77   Min.   : 21.00   Min.   : 0.000  \n 1st Qu.: 5.390   1st Qu.:115   1st Qu.: 42.75   1st Qu.: 0.000  \n Median : 7.490   Median :125   Median : 69.00   Median : 5.000  \n Mean   : 7.496   Mean   :125   Mean   : 68.66   Mean   : 6.635  \n 3rd Qu.: 9.320   3rd Qu.:135   3rd Qu.: 91.00   3rd Qu.:12.000  \n Max.   :16.270   Max.   :175   Max.   :120.00   Max.   :29.000  \n   Population        Price        ShelveLoc        Age          Education   \n Min.   : 10.0   Min.   : 24.0   Bad   : 96   Min.   :25.00   Min.   :10.0  \n 1st Qu.:139.0   1st Qu.:100.0   Good  : 85   1st Qu.:39.75   1st Qu.:12.0  \n Median :272.0   Median :117.0   Medium:219   Median :54.50   Median :14.0  \n Mean   :264.8   Mean   :115.8                Mean   :53.32   Mean   :13.9  \n 3rd Qu.:398.5   3rd Qu.:131.0                3rd Qu.:66.00   3rd Qu.:16.0  \n Max.   :509.0   Max.   :191.0                Max.   :80.00   Max.   :18.0  \n Urban       US     \n No :118   No :142  \n Yes:282   Yes:258  \n                    \n                    \n                    \n                    \n```\n\n\n:::\n\n```{.r .cell-code}\nstr(Carseats)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n'data.frame':\t400 obs. of  11 variables:\n $ Sales      : num  9.5 11.22 10.06 7.4 4.15 ...\n $ CompPrice  : num  138 111 113 117 141 124 115 136 132 132 ...\n $ Income     : num  73 48 35 100 64 113 105 81 110 113 ...\n $ Advertising: num  11 16 10 4 3 13 0 15 0 0 ...\n $ Population : num  276 260 269 466 340 501 45 425 108 131 ...\n $ Price      : num  120 83 80 97 128 72 108 120 124 124 ...\n $ ShelveLoc  : Factor w/ 3 levels \"Bad\",\"Good\",\"Medium\": 1 2 3 3 1 1 3 2 3 3 ...\n $ Age        : num  42 65 59 55 38 78 71 67 76 76 ...\n $ Education  : num  17 10 12 14 13 16 15 10 10 17 ...\n $ Urban      : Factor w/ 2 levels \"No\",\"Yes\": 2 2 2 2 2 1 2 2 1 1 ...\n $ US         : Factor w/ 2 levels \"No\",\"Yes\": 2 2 2 2 1 2 1 2 1 2 ...\n```\n\n\n:::\n:::\n\n\n## Manipulando os dados\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncad_crianca <- Carseats %>% rename(vendas = Sales, \n                                   preco_comp = CompPrice,\n                                   renda = Income,\n                                   propaganda = Advertising,\n                                   populacao = Population,\n                                   preco = Price,\n                                   local_prat = ShelveLoc,\n                                   idade = Age,\n                                   educacao = Education,\n                                   urbano = Urban,\n                                   eua = US)\n\ncad_crianca <- cad_crianca %>%\n  mutate(vendaAlta = ifelse(vendas > 8, \"Alta\", \"Baixa\")) %>%\n  mutate(vendaAlta = as.factor(vendaAlta)) %>%\n  select(-vendas)  # Remover Sales original\n\n# Verificar distribuição\ntable(cad_crianca$vendaAlta)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n Alta Baixa \n  164   236 \n```\n\n\n:::\n\n```{.r .cell-code}\nstr(cad_crianca)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n'data.frame':\t400 obs. of  11 variables:\n $ preco_comp: num  138 111 113 117 141 124 115 136 132 132 ...\n $ renda     : num  73 48 35 100 64 113 105 81 110 113 ...\n $ propaganda: num  11 16 10 4 3 13 0 15 0 0 ...\n $ populacao : num  276 260 269 466 340 501 45 425 108 131 ...\n $ preco     : num  120 83 80 97 128 72 108 120 124 124 ...\n $ local_prat: Factor w/ 3 levels \"Bad\",\"Good\",\"Medium\": 1 2 3 3 1 1 3 2 3 3 ...\n $ idade     : num  42 65 59 55 38 78 71 67 76 76 ...\n $ educacao  : num  17 10 12 14 13 16 15 10 10 17 ...\n $ urbano    : Factor w/ 2 levels \"No\",\"Yes\": 2 2 2 2 2 1 2 2 1 1 ...\n $ eua       : Factor w/ 2 levels \"No\",\"Yes\": 2 2 2 2 1 2 1 2 1 2 ...\n $ vendaAlta : Factor w/ 2 levels \"Alta\",\"Baixa\": 1 1 1 2 2 1 2 1 2 2 ...\n```\n\n\n:::\n\n```{.r .cell-code}\nsummary(cad_crianca)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   preco_comp      renda          propaganda       populacao    \n Min.   : 77   Min.   : 21.00   Min.   : 0.000   Min.   : 10.0  \n 1st Qu.:115   1st Qu.: 42.75   1st Qu.: 0.000   1st Qu.:139.0  \n Median :125   Median : 69.00   Median : 5.000   Median :272.0  \n Mean   :125   Mean   : 68.66   Mean   : 6.635   Mean   :264.8  \n 3rd Qu.:135   3rd Qu.: 91.00   3rd Qu.:12.000   3rd Qu.:398.5  \n Max.   :175   Max.   :120.00   Max.   :29.000   Max.   :509.0  \n     preco        local_prat      idade          educacao    urbano   \n Min.   : 24.0   Bad   : 96   Min.   :25.00   Min.   :10.0   No :118  \n 1st Qu.:100.0   Good  : 85   1st Qu.:39.75   1st Qu.:12.0   Yes:282  \n Median :117.0   Medium:219   Median :54.50   Median :14.0            \n Mean   :115.8                Mean   :53.32   Mean   :13.9            \n 3rd Qu.:131.0                3rd Qu.:66.00   3rd Qu.:16.0            \n Max.   :191.0                Max.   :80.00   Max.   :18.0            \n  eua      vendaAlta  \n No :142   Alta :164  \n Yes:258   Baixa:236  \n                      \n                      \n                      \n                      \n```\n\n\n:::\n:::\n\n\n## Treino e Teste\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(21)\ny <- cad_crianca$vendaAlta\nindice_teste <- createDataPartition(y, times = 1, p = 0.2, list = FALSE)\n\nconj_treino <- cad_crianca[-indice_teste,]\nconj_teste <- cad_crianca[indice_teste,]\n\nstr(conj_treino)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n'data.frame':\t319 obs. of  11 variables:\n $ preco_comp: num  111 117 141 124 115 132 132 121 117 122 ...\n $ renda     : num  48 100 64 113 105 110 113 78 94 35 ...\n $ propaganda: num  16 4 3 13 0 0 0 9 4 2 ...\n $ populacao : num  260 466 340 501 45 108 131 150 503 393 ...\n $ preco     : num  83 97 128 72 108 124 124 100 94 136 ...\n $ local_prat: Factor w/ 3 levels \"Bad\",\"Good\",\"Medium\": 2 3 1 1 3 3 3 1 2 3 ...\n $ idade     : num  65 55 38 78 71 76 76 26 50 62 ...\n $ educacao  : num  10 14 13 16 15 10 17 10 13 18 ...\n $ urbano    : Factor w/ 2 levels \"No\",\"Yes\": 2 2 2 1 2 1 1 1 2 2 ...\n $ eua       : Factor w/ 2 levels \"No\",\"Yes\": 2 2 1 2 1 1 2 2 2 1 ...\n $ vendaAlta : Factor w/ 2 levels \"Alta\",\"Baixa\": 1 2 2 1 2 2 2 1 1 2 ...\n```\n\n\n:::\n\n```{.r .cell-code}\nprop.table(table(conj_treino$alta))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nnumeric(0)\n```\n\n\n:::\n\n```{.r .cell-code}\nstr(conj_teste)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n'data.frame':\t81 obs. of  11 variables:\n $ preco_comp: num  138 113 136 125 139 98 115 131 157 118 ...\n $ renda     : num  73 35 81 90 32 118 54 84 53 71 ...\n $ propaganda: num  11 10 15 2 0 0 0 11 0 4 ...\n $ populacao : num  276 269 425 367 176 19 406 29 403 148 ...\n $ preco     : num  120 80 120 131 82 107 128 96 124 114 ...\n $ local_prat: Factor w/ 3 levels \"Bad\",\"Good\",\"Medium\": 1 3 2 3 2 3 3 3 1 3 ...\n $ idade     : num  42 59 67 35 54 64 42 44 58 80 ...\n $ educacao  : num  17 12 10 18 11 17 17 17 16 13 ...\n $ urbano    : Factor w/ 2 levels \"No\",\"Yes\": 2 2 2 2 1 2 2 1 2 2 ...\n $ eua       : Factor w/ 2 levels \"No\",\"Yes\": 2 2 2 2 1 1 2 2 1 1 ...\n $ vendaAlta : Factor w/ 2 levels \"Alta\",\"Baixa\": 1 1 1 2 1 2 2 1 2 2 ...\n```\n\n\n:::\n\n```{.r .cell-code}\nprop.table(table(conj_teste$alta))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nnumeric(0)\n```\n\n\n:::\n:::\n\n\n\n## GBM\n\n### Ajustando um modelo GBM\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(21)\n\n# Definir grade de parâmetros\ntune_grid <- expand.grid(\n  n.trees = c(100, 300, 500),\n  interaction.depth = c(1, 3, 5),\n  shrinkage = c(0.01, 0.1),\n  n.minobsinnode = c(5, 10)\n)\n\n# Treinamento com validação cruzada\nctrl <- trainControl(method = \"cv\", number = 5)\n\ngbm_caret <- train(\n  vendaAlta ~ .,\n  data = conj_treino,\n  method = \"gbm\",\n  distribution = \"bernoulli\",\n  trControl = ctrl,\n  tuneGrid = tune_grid,\n  verbose = FALSE\n)\n```\n:::\n\n\n## Melhor modelo\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Melhor modelo\ngbm_caret$bestTune\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   n.trees interaction.depth shrinkage n.minobsinnode\n23     300                 1       0.1             10\n```\n\n\n:::\n:::\n\n\n\n## Verificando os Resultados\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Previsões\npred_class <- predict(gbm_caret, newdata = conj_teste)\n\n# Matriz de confusão\nconfusionMatrix(pred_class, conj_teste$vendaAlta)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nConfusion Matrix and Statistics\n\n          Reference\nPrediction Alta Baixa\n     Alta    25     6\n     Baixa    8    42\n                                         \n               Accuracy : 0.8272         \n                 95% CI : (0.727, 0.9022)\n    No Information Rate : 0.5926         \n    P-Value [Acc > NIR] : 5.302e-06      \n                                         \n                  Kappa : 0.6386         \n                                         \n Mcnemar's Test P-Value : 0.7893         \n                                         \n            Sensitivity : 0.7576         \n            Specificity : 0.8750         \n         Pos Pred Value : 0.8065         \n         Neg Pred Value : 0.8400         \n             Prevalence : 0.4074         \n         Detection Rate : 0.3086         \n   Detection Prevalence : 0.3827         \n      Balanced Accuracy : 0.8163         \n                                         \n       'Positive' Class : Alta           \n                                         \n```\n\n\n:::\n:::\n\n\n## Curva ROC\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Probabilidades previstas\npred_prob <- predict(gbm_caret, newdata = conj_teste, type = \"prob\")\n\n# Curva ROC\nroc_obj <- roc(response = conj_teste$vendaAlta, predictor = pred_prob$Alta)\nplot(roc_obj, col = \"blue\", lwd = 2, main = \"Curva ROC - GBM\")\n```\n\n::: {.cell-output-display}\n![](Aula12.2_files/figure-html/unnamed-chunk-7-1.png){width=90%}\n:::\n\n```{.r .cell-code}\nauc(roc_obj)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nArea under the curve: 0.9394\n```\n\n\n:::\n:::\n\n\n## Importância das variáveis\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Obter importância\nimportancia <- varImp(gbm_caret)\n\n# Visualização gráfica\nplot(importancia, top = 10, main = \"Importância das Variáveis - GBM\")\n```\n\n::: {.cell-output-display}\n![](Aula12.2_files/figure-html/unnamed-chunk-8-1.png){width=90%}\n:::\n:::\n\n\n",
    "supporting": [
      "Aula12.2_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}