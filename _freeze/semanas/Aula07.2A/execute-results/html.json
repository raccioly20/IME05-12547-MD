{
  "hash": "aaafa7610b876d8ca98477b57b81dd11",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Regressão Linear Múltipla - Validação Cruzada\"\nauthor: \"Ricardo Accioly\"\ndate: \"2024-03-29\"\nformat:\n  html:\n    grid: \n      margin-width: 350px\n    code-link: TRUE\nreference-location: margin\ncitation-location: margin\n---\n\n\n## Carregando bibliotecas\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.0     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n:::\n\n\n## Dados de propaganda\n\nO conjunto de dados contém estatísticas sobre as vendas de um produto em 200 diferentes mercados, juntamente com orçamentos publicitários em cada um desses mercados, para diferentes canais de mídia: TV, rádio e jornal. As vendas estão em milhares de unidades e o orçamento está em milhares de dólares.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readxl)\npropaganda <- read_excel(\"Propaganda.xlsx\")\nsummary(propaganda)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       TV             Radio          Newspaper          Sales      \n Min.   :  0.70   Min.   : 0.000   Min.   :  0.30   Min.   : 1.60  \n 1st Qu.: 74.38   1st Qu.: 9.975   1st Qu.: 12.75   1st Qu.:10.38  \n Median :149.75   Median :22.900   Median : 25.75   Median :12.90  \n Mean   :147.04   Mean   :23.264   Mean   : 30.55   Mean   :14.02  \n 3rd Qu.:218.82   3rd Qu.:36.525   3rd Qu.: 45.10   3rd Qu.:17.40  \n Max.   :296.40   Max.   :49.600   Max.   :114.00   Max.   :27.00  \n```\n\n\n:::\n:::\n\n\n## Renomeando\n\n\n::: {.cell}\n\n```{.r .cell-code}\npropaganda <- propaganda %>% rename(Jornal = Newspaper, Vendas = Sales)\n```\n:::\n\n\n## Validação cruzada\n\nA validação cruzada é útil para termos uma estimativa do erro fora da amostra. O método de validação cruzada é um procedimento utilizado para estimar a qualidade de um modelo de aprendizado de máquina em dados não vistos. A validação cruzada é um procedimento comum para avaliar a capacidade de generalização de um modelo.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(caret)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nCarregando pacotes exigidos: lattice\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'caret'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following object is masked from 'package:purrr':\n\n    lift\n```\n\n\n:::\n\n```{.r .cell-code}\nset.seed(21)\nmodelo <- train( Vendas ~ ., propaganda, method = \"lm\",\n                 trControl = trainControl(method = \"cv\", number = 10,\n                                          verboseIter = TRUE))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n+ Fold01: intercept=TRUE \n- Fold01: intercept=TRUE \n+ Fold02: intercept=TRUE \n- Fold02: intercept=TRUE \n+ Fold03: intercept=TRUE \n- Fold03: intercept=TRUE \n+ Fold04: intercept=TRUE \n- Fold04: intercept=TRUE \n+ Fold05: intercept=TRUE \n- Fold05: intercept=TRUE \n+ Fold06: intercept=TRUE \n- Fold06: intercept=TRUE \n+ Fold07: intercept=TRUE \n- Fold07: intercept=TRUE \n+ Fold08: intercept=TRUE \n- Fold08: intercept=TRUE \n+ Fold09: intercept=TRUE \n- Fold09: intercept=TRUE \n+ Fold10: intercept=TRUE \n- Fold10: intercept=TRUE \nAggregating results\nFitting final model on full training set\n```\n\n\n:::\n\n```{.r .cell-code}\n# Mostra o modelo\nmodelo\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nLinear Regression \n\n200 samples\n  3 predictor\n\nNo pre-processing\nResampling: Cross-Validated (10 fold) \nSummary of sample sizes: 180, 180, 181, 180, 180, 180, ... \nResampling results:\n\n  RMSE      Rsquared   MAE     \n  1.662943  0.9033394  1.286409\n\nTuning parameter 'intercept' was held constant at a value of TRUE\n```\n\n\n:::\n\n```{.r .cell-code}\n# Modelo final\nmodelo$finalModel\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = .outcome ~ ., data = dat)\n\nCoefficients:\n(Intercept)           TV        Radio       Jornal  \n   2.938889     0.045765     0.188530    -0.001037  \n```\n\n\n:::\n:::\n\n\nVeja que a validação cruzada não faz seleção de variáveis.\n\nO modelo final obtido mostra Jornal com um coeficiente negativo!\n\nEsta variável deveria estar fora do modelo.\n\n## Novo modelo\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(21)\nmodelo <- train( Vendas ~ TV + Radio, propaganda, method = \"lm\",\n                 trControl = trainControl(method = \"cv\", number = 10,\n                                          verboseIter = TRUE))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n+ Fold01: intercept=TRUE \n- Fold01: intercept=TRUE \n+ Fold02: intercept=TRUE \n- Fold02: intercept=TRUE \n+ Fold03: intercept=TRUE \n- Fold03: intercept=TRUE \n+ Fold04: intercept=TRUE \n- Fold04: intercept=TRUE \n+ Fold05: intercept=TRUE \n- Fold05: intercept=TRUE \n+ Fold06: intercept=TRUE \n- Fold06: intercept=TRUE \n+ Fold07: intercept=TRUE \n- Fold07: intercept=TRUE \n+ Fold08: intercept=TRUE \n- Fold08: intercept=TRUE \n+ Fold09: intercept=TRUE \n- Fold09: intercept=TRUE \n+ Fold10: intercept=TRUE \n- Fold10: intercept=TRUE \nAggregating results\nFitting final model on full training set\n```\n\n\n:::\n\n```{.r .cell-code}\n# Mostra o modelo\nmodelo\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nLinear Regression \n\n200 samples\n  2 predictor\n\nNo pre-processing\nResampling: Cross-Validated (10 fold) \nSummary of sample sizes: 180, 180, 181, 180, 180, 180, ... \nResampling results:\n\n  RMSE      Rsquared   MAE     \n  1.649103  0.9051774  1.275233\n\nTuning parameter 'intercept' was held constant at a value of TRUE\n```\n\n\n:::\n\n```{.r .cell-code}\n# Modelo final\nmodelo$finalModel\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = .outcome ~ ., data = dat)\n\nCoefficients:\n(Intercept)           TV        Radio  \n    2.92110      0.04575      0.18799  \n```\n\n\n:::\n:::\n\n\n## Modelo Inicial\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(21)\ny <- propaganda$Vendas\nindice_teste <- createDataPartition(y, times = 1, p = 0.40, list = FALSE)\nconj_treino <- propaganda[-indice_teste, ]\nconj_teste <- propaganda[indice_teste, ]\n\n## Modelo com conjunto de treino\nmod <- lm( Vendas ~ TV + Radio, data = conj_treino)\nsummary(mod)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = Vendas ~ TV + Radio, data = conj_treino)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-9.4585 -0.6886  0.1687  1.0799  2.5529 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept) 3.441076   0.357985   9.612   <2e-16 ***\nTV          0.042575   0.001774  24.005   <2e-16 ***\nRadio       0.191607   0.010412  18.402   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.607 on 116 degrees of freedom\nMultiple R-squared:  0.8992,\tAdjusted R-squared:  0.8975 \nF-statistic: 517.5 on 2 and 116 DF,  p-value: < 2.2e-16\n```\n\n\n:::\n\n```{.r .cell-code}\n# Erro com conjunto de teste\nsqrt(mean((conj_teste$Vendas - predict(mod, conj_teste)) ^ 2))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1.846764\n```\n\n\n:::\n:::\n\n\n## \n",
    "supporting": [
      "Aula07.2A_files\\figure-html"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}