{
  "hash": "a5887c197c5dcc000f9d5633885bf8df",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Regularização de Modelos\"\nauthor: \"Ricardo Accioly\"\ndate: \"2024-03-29\"\nformat:\n html:\n    code-link: true\n---\n\n\n## Regularização de modelos\n\n## Carregando Bibliotecas\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(glmnet)\n```\n:::\n\n\n## Carregando os dados\n\nVendas de casas em Seattle entre 2015 e 2016\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvendas_casa <- readRDS(\"home_sales.rds\")\nhead(vendas_casa)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 8\n  selling_price home_age bedrooms bathrooms sqft_living sqft_lot sqft_basement\n          <dbl>    <dbl>    <dbl>     <dbl>       <dbl>    <dbl>         <dbl>\n1        487000       10        4      2.5         2540     5001             0\n2        465000       10        3      2.25        1530     1245           480\n3        411000       18        2      2           1130     1148           330\n4        635000        4        3      2.5         3350     4007           800\n5        380000       24        5      2.5         2130     8428             0\n6        495000       21        3      3.5         1650     1577           550\n# ℹ 1 more variable: floors <dbl>\n```\n\n\n:::\n\n```{.r .cell-code}\nvendas_casa <- vendas_casa %>% rename(preco=selling_price,\n                                      idade=home_age,\n                                      quartos=bedrooms,\n                                      banheiros= bathrooms,\n                                      m2_princ=sqft_living,\n                                      m2_tot=sqft_lot,\n                                      m2_porao=sqft_basement,\n                                      andares=floors\n                                      )\nsummary(vendas_casa)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     preco            idade          quartos        banheiros    \n Min.   :350000   Min.   : 0.00   Min.   :1.000   Min.   :0.750  \n 1st Qu.:410000   1st Qu.:12.00   1st Qu.:3.000   1st Qu.:2.438  \n Median :470000   Median :19.00   Median :3.000   Median :2.500  \n Mean   :479085   Mean   :18.53   Mean   :3.338   Mean   :2.473  \n 3rd Qu.:541625   3rd Qu.:25.00   3rd Qu.:4.000   3rd Qu.:2.500  \n Max.   :650000   Max.   :49.00   Max.   :8.000   Max.   :5.000  \n    m2_princ        m2_tot          m2_porao         andares     \n Min.   : 550   Min.   :   600   Min.   :   0.0   Min.   :1.000  \n 1st Qu.:1640   1st Qu.:  3200   1st Qu.:   0.0   1st Qu.:2.000  \n Median :2060   Median :  5508   Median :   0.0   Median :2.000  \n Mean   :2087   Mean   : 11891   Mean   : 129.7   Mean   :1.865  \n 3rd Qu.:2500   3rd Qu.:  8644   3rd Qu.: 122.5   3rd Qu.:2.000  \n Max.   :3880   Max.   :415126   Max.   :1660.0   Max.   :2.000  \n```\n\n\n:::\n\n```{.r .cell-code}\nvendas_casa <- vendas_casa %>% mutate(preco_m=preco/1000) %>% select(-preco)\nsummary(vendas_casa)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     idade          quartos        banheiros        m2_princ   \n Min.   : 0.00   Min.   :1.000   Min.   :0.750   Min.   : 550  \n 1st Qu.:12.00   1st Qu.:3.000   1st Qu.:2.438   1st Qu.:1640  \n Median :19.00   Median :3.000   Median :2.500   Median :2060  \n Mean   :18.53   Mean   :3.338   Mean   :2.473   Mean   :2087  \n 3rd Qu.:25.00   3rd Qu.:4.000   3rd Qu.:2.500   3rd Qu.:2500  \n Max.   :49.00   Max.   :8.000   Max.   :5.000   Max.   :3880  \n     m2_tot          m2_porao         andares         preco_m     \n Min.   :   600   Min.   :   0.0   Min.   :1.000   Min.   :350.0  \n 1st Qu.:  3200   1st Qu.:   0.0   1st Qu.:2.000   1st Qu.:410.0  \n Median :  5508   Median :   0.0   Median :2.000   Median :470.0  \n Mean   : 11891   Mean   : 129.7   Mean   :1.865   Mean   :479.1  \n 3rd Qu.:  8644   3rd Qu.: 122.5   3rd Qu.:2.000   3rd Qu.:541.6  \n Max.   :415126   Max.   :1660.0   Max.   :2.000   Max.   :650.0  \n```\n\n\n:::\n:::\n\n\n## Conjunto de treino e de teste\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(caret)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nCarregando pacotes exigidos: lattice\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'caret'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following object is masked from 'package:purrr':\n\n    lift\n```\n\n\n:::\n\n```{.r .cell-code}\nset.seed(21)\nnrow(vendas_casa)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1492\n```\n\n\n:::\n\n```{.r .cell-code}\ny <- vendas_casa$preco_m\nindice_teste <- createDataPartition(y, times = 1, p = 0.2, list = FALSE)\n\nconj_treino <- vendas_casa[-indice_teste,]\nconj_teste <- vendas_casa[indice_teste,]\n\nstr(conj_treino)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\ntibble [1,192 × 8] (S3: tbl_df/tbl/data.frame)\n $ idade    : num [1:1192] 10 18 4 21 19 24 3 16 20 29 ...\n $ quartos  : num [1:1192] 3 2 3 3 3 2 4 3 3 3 ...\n $ banheiros: num [1:1192] 2.25 2 2.5 3.5 2.25 1 2.5 2.75 2.75 2.5 ...\n $ m2_princ : num [1:1192] 1530 1130 3350 1650 1430 1430 2140 2100 2930 1960 ...\n $ m2_tot   : num [1:1192] 1245 1148 4007 1577 4777 ...\n $ m2_porao : num [1:1192] 480 330 800 550 0 420 0 590 1070 0 ...\n $ andares  : num [1:1192] 2 2 2 2 2 1 2 2 1 2 ...\n $ preco_m  : num [1:1192] 465 411 635 495 355 ...\n```\n\n\n:::\n\n```{.r .cell-code}\nstr(conj_teste)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\ntibble [300 × 8] (S3: tbl_df/tbl/data.frame)\n $ idade    : num [1:300] 10 24 19 11 3 28 9 17 9 19 ...\n $ quartos  : num [1:300] 4 5 3 4 4 5 3 3 3 3 ...\n $ banheiros: num [1:300] 2.5 2.5 2 2.5 2.75 3 2.5 3.5 3.5 2.25 ...\n $ m2_princ : num [1:300] 2540 2130 2190 1920 2360 ...\n $ m2_tot   : num [1:300] 5001 8428 19800 9000 15100 ...\n $ m2_porao : num [1:300] 0 0 0 0 0 0 0 770 770 145 ...\n $ andares  : num [1:300] 2 2 1 2 1 2 2 2 2 2 ...\n $ preco_m  : num [1:300] 487 380 465 425 535 ...\n```\n\n\n:::\n\n```{.r .cell-code}\ngt::gt(head(conj_treino, 10))\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"ajgaokapiz\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#ajgaokapiz table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#ajgaokapiz thead, #ajgaokapiz tbody, #ajgaokapiz tfoot, #ajgaokapiz tr, #ajgaokapiz td, #ajgaokapiz th {\n  border-style: none;\n}\n\n#ajgaokapiz p {\n  margin: 0;\n  padding: 0;\n}\n\n#ajgaokapiz .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#ajgaokapiz .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#ajgaokapiz .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#ajgaokapiz .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#ajgaokapiz .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#ajgaokapiz .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#ajgaokapiz .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#ajgaokapiz .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#ajgaokapiz .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#ajgaokapiz .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#ajgaokapiz .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#ajgaokapiz .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#ajgaokapiz .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#ajgaokapiz .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#ajgaokapiz .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#ajgaokapiz .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#ajgaokapiz .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#ajgaokapiz .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#ajgaokapiz .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ajgaokapiz .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#ajgaokapiz .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#ajgaokapiz .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#ajgaokapiz .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ajgaokapiz .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#ajgaokapiz .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#ajgaokapiz .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#ajgaokapiz .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ajgaokapiz .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#ajgaokapiz .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#ajgaokapiz .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#ajgaokapiz .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#ajgaokapiz .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#ajgaokapiz .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ajgaokapiz .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#ajgaokapiz .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ajgaokapiz .gt_left {\n  text-align: left;\n}\n\n#ajgaokapiz .gt_center {\n  text-align: center;\n}\n\n#ajgaokapiz .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#ajgaokapiz .gt_font_normal {\n  font-weight: normal;\n}\n\n#ajgaokapiz .gt_font_bold {\n  font-weight: bold;\n}\n\n#ajgaokapiz .gt_font_italic {\n  font-style: italic;\n}\n\n#ajgaokapiz .gt_super {\n  font-size: 65%;\n}\n\n#ajgaokapiz .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#ajgaokapiz .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#ajgaokapiz .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#ajgaokapiz .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#ajgaokapiz .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#ajgaokapiz .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#ajgaokapiz .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"idade\">idade</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"quartos\">quartos</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"banheiros\">banheiros</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"m2_princ\">m2_princ</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"m2_tot\">m2_tot</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"m2_porao\">m2_porao</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"andares\">andares</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"preco_m\">preco_m</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"idade\" class=\"gt_row gt_right\">10</td>\n<td headers=\"quartos\" class=\"gt_row gt_right\">3</td>\n<td headers=\"banheiros\" class=\"gt_row gt_right\">2.25</td>\n<td headers=\"m2_princ\" class=\"gt_row gt_right\">1530</td>\n<td headers=\"m2_tot\" class=\"gt_row gt_right\">1245</td>\n<td headers=\"m2_porao\" class=\"gt_row gt_right\">480</td>\n<td headers=\"andares\" class=\"gt_row gt_right\">2</td>\n<td headers=\"preco_m\" class=\"gt_row gt_right\">465.000</td></tr>\n    <tr><td headers=\"idade\" class=\"gt_row gt_right\">18</td>\n<td headers=\"quartos\" class=\"gt_row gt_right\">2</td>\n<td headers=\"banheiros\" class=\"gt_row gt_right\">2.00</td>\n<td headers=\"m2_princ\" class=\"gt_row gt_right\">1130</td>\n<td headers=\"m2_tot\" class=\"gt_row gt_right\">1148</td>\n<td headers=\"m2_porao\" class=\"gt_row gt_right\">330</td>\n<td headers=\"andares\" class=\"gt_row gt_right\">2</td>\n<td headers=\"preco_m\" class=\"gt_row gt_right\">411.000</td></tr>\n    <tr><td headers=\"idade\" class=\"gt_row gt_right\">4</td>\n<td headers=\"quartos\" class=\"gt_row gt_right\">3</td>\n<td headers=\"banheiros\" class=\"gt_row gt_right\">2.50</td>\n<td headers=\"m2_princ\" class=\"gt_row gt_right\">3350</td>\n<td headers=\"m2_tot\" class=\"gt_row gt_right\">4007</td>\n<td headers=\"m2_porao\" class=\"gt_row gt_right\">800</td>\n<td headers=\"andares\" class=\"gt_row gt_right\">2</td>\n<td headers=\"preco_m\" class=\"gt_row gt_right\">635.000</td></tr>\n    <tr><td headers=\"idade\" class=\"gt_row gt_right\">21</td>\n<td headers=\"quartos\" class=\"gt_row gt_right\">3</td>\n<td headers=\"banheiros\" class=\"gt_row gt_right\">3.50</td>\n<td headers=\"m2_princ\" class=\"gt_row gt_right\">1650</td>\n<td headers=\"m2_tot\" class=\"gt_row gt_right\">1577</td>\n<td headers=\"m2_porao\" class=\"gt_row gt_right\">550</td>\n<td headers=\"andares\" class=\"gt_row gt_right\">2</td>\n<td headers=\"preco_m\" class=\"gt_row gt_right\">495.000</td></tr>\n    <tr><td headers=\"idade\" class=\"gt_row gt_right\">19</td>\n<td headers=\"quartos\" class=\"gt_row gt_right\">3</td>\n<td headers=\"banheiros\" class=\"gt_row gt_right\">2.25</td>\n<td headers=\"m2_princ\" class=\"gt_row gt_right\">1430</td>\n<td headers=\"m2_tot\" class=\"gt_row gt_right\">4777</td>\n<td headers=\"m2_porao\" class=\"gt_row gt_right\">0</td>\n<td headers=\"andares\" class=\"gt_row gt_right\">2</td>\n<td headers=\"preco_m\" class=\"gt_row gt_right\">355.000</td></tr>\n    <tr><td headers=\"idade\" class=\"gt_row gt_right\">24</td>\n<td headers=\"quartos\" class=\"gt_row gt_right\">2</td>\n<td headers=\"banheiros\" class=\"gt_row gt_right\">1.00</td>\n<td headers=\"m2_princ\" class=\"gt_row gt_right\">1430</td>\n<td headers=\"m2_tot\" class=\"gt_row gt_right\">365904</td>\n<td headers=\"m2_porao\" class=\"gt_row gt_right\">420</td>\n<td headers=\"andares\" class=\"gt_row gt_right\">1</td>\n<td headers=\"preco_m\" class=\"gt_row gt_right\">356.000</td></tr>\n    <tr><td headers=\"idade\" class=\"gt_row gt_right\">3</td>\n<td headers=\"quartos\" class=\"gt_row gt_right\">4</td>\n<td headers=\"banheiros\" class=\"gt_row gt_right\">2.50</td>\n<td headers=\"m2_princ\" class=\"gt_row gt_right\">2140</td>\n<td headers=\"m2_tot\" class=\"gt_row gt_right\">7245</td>\n<td headers=\"m2_porao\" class=\"gt_row gt_right\">0</td>\n<td headers=\"andares\" class=\"gt_row gt_right\">2</td>\n<td headers=\"preco_m\" class=\"gt_row gt_right\">495.000</td></tr>\n    <tr><td headers=\"idade\" class=\"gt_row gt_right\">16</td>\n<td headers=\"quartos\" class=\"gt_row gt_right\">3</td>\n<td headers=\"banheiros\" class=\"gt_row gt_right\">2.75</td>\n<td headers=\"m2_princ\" class=\"gt_row gt_right\">2100</td>\n<td headers=\"m2_tot\" class=\"gt_row gt_right\">10362</td>\n<td headers=\"m2_porao\" class=\"gt_row gt_right\">590</td>\n<td headers=\"andares\" class=\"gt_row gt_right\">2</td>\n<td headers=\"preco_m\" class=\"gt_row gt_right\">525.000</td></tr>\n    <tr><td headers=\"idade\" class=\"gt_row gt_right\">20</td>\n<td headers=\"quartos\" class=\"gt_row gt_right\">3</td>\n<td headers=\"banheiros\" class=\"gt_row gt_right\">2.75</td>\n<td headers=\"m2_princ\" class=\"gt_row gt_right\">2930</td>\n<td headers=\"m2_tot\" class=\"gt_row gt_right\">5569</td>\n<td headers=\"m2_porao\" class=\"gt_row gt_right\">1070</td>\n<td headers=\"andares\" class=\"gt_row gt_right\">1</td>\n<td headers=\"preco_m\" class=\"gt_row gt_right\">559.900</td></tr>\n    <tr><td headers=\"idade\" class=\"gt_row gt_right\">29</td>\n<td headers=\"quartos\" class=\"gt_row gt_right\">3</td>\n<td headers=\"banheiros\" class=\"gt_row gt_right\">2.50</td>\n<td headers=\"m2_princ\" class=\"gt_row gt_right\">1960</td>\n<td headers=\"m2_tot\" class=\"gt_row gt_right\">8469</td>\n<td headers=\"m2_porao\" class=\"gt_row gt_right\">0</td>\n<td headers=\"andares\" class=\"gt_row gt_right\">2</td>\n<td headers=\"preco_m\" class=\"gt_row gt_right\">552.321</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n\n:::\n:::\n\n\n## Métodos de Regularização com o caret\n\nUsando o caret para selecionar o melhor modelo\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntrain_control <- trainControl(\n  method = \"repeatedcv\",\n  number = 10,  # validação cruzada com 10 folds\n  repeats = 5,  # 5 repetições\n  savePredictions = \"final\"  # salva os resultados do modelo final\n)\n```\n:::\n\n\n## Cross-Validation no caret\n\nNós podemos usar o k-fold cross validation para identificar o melhor valor de $\\lambda$\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(21)\nmdl_ridge <- train(\n  preco_m ~ .,\n  data = conj_treino,\n  method = \"glmnet\",\n  metric = \"RMSE\",  \n  preProcess = c(\"center\", \"scale\"),\n  tuneGrid = expand.grid(\n    .alpha = 0,  # regressão ridge\n    .lambda = seq(0, 5, length.out = 201)\n  ),\n  trControl = train_control\n  )\nmdl_ridge\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nglmnet \n\n1192 samples\n   7 predictor\n\nPre-processing: centered (7), scaled (7) \nResampling: Cross-Validated (10 fold, repeated 5 times) \nSummary of sample sizes: 1072, 1073, 1073, 1074, 1073, 1074, ... \nResampling results across tuning parameters:\n\n  lambda  RMSE      Rsquared   MAE     \n  0.000   41.76534  0.7452767  34.94707\n  0.025   41.76534  0.7452767  34.94707\n  0.050   41.76534  0.7452767  34.94707\n  0.075   41.76534  0.7452767  34.94707\n  0.100   41.76534  0.7452767  34.94707\n  0.125   41.76534  0.7452767  34.94707\n  0.150   41.76534  0.7452767  34.94707\n  0.175   41.76534  0.7452767  34.94707\n  0.200   41.76534  0.7452767  34.94707\n  0.225   41.76534  0.7452767  34.94707\n  0.250   41.76534  0.7452767  34.94707\n  0.275   41.76534  0.7452767  34.94707\n  0.300   41.76534  0.7452767  34.94707\n  0.325   41.76534  0.7452767  34.94707\n  0.350   41.76534  0.7452767  34.94707\n  0.375   41.76534  0.7452767  34.94707\n  0.400   41.76534  0.7452767  34.94707\n  0.425   41.76534  0.7452767  34.94707\n  0.450   41.76534  0.7452767  34.94707\n  0.475   41.76534  0.7452767  34.94707\n  0.500   41.76534  0.7452767  34.94707\n  0.525   41.76534  0.7452767  34.94707\n  0.550   41.76534  0.7452767  34.94707\n  0.575   41.76534  0.7452767  34.94707\n  0.600   41.76534  0.7452767  34.94707\n  0.625   41.76534  0.7452767  34.94707\n  0.650   41.76534  0.7452767  34.94707\n  0.675   41.76534  0.7452767  34.94707\n  0.700   41.76534  0.7452767  34.94707\n  0.725   41.76534  0.7452767  34.94707\n  0.750   41.76534  0.7452767  34.94707\n  0.775   41.76534  0.7452767  34.94707\n  0.800   41.76534  0.7452767  34.94707\n  0.825   41.76534  0.7452767  34.94707\n  0.850   41.76534  0.7452767  34.94707\n  0.875   41.76534  0.7452767  34.94707\n  0.900   41.76534  0.7452767  34.94707\n  0.925   41.76534  0.7452767  34.94707\n  0.950   41.76534  0.7452767  34.94707\n  0.975   41.76534  0.7452767  34.94707\n  1.000   41.76534  0.7452767  34.94707\n  1.025   41.76534  0.7452767  34.94707\n  1.050   41.76534  0.7452767  34.94707\n  1.075   41.76534  0.7452767  34.94707\n  1.100   41.76534  0.7452767  34.94707\n  1.125   41.76534  0.7452767  34.94707\n  1.150   41.76534  0.7452767  34.94707\n  1.175   41.76534  0.7452767  34.94707\n  1.200   41.76534  0.7452767  34.94707\n  1.225   41.76534  0.7452767  34.94707\n  1.250   41.76534  0.7452767  34.94707\n  1.275   41.76534  0.7452767  34.94707\n  1.300   41.76534  0.7452767  34.94707\n  1.325   41.76534  0.7452767  34.94707\n  1.350   41.76534  0.7452767  34.94707\n  1.375   41.76534  0.7452767  34.94707\n  1.400   41.76534  0.7452767  34.94707\n  1.425   41.76534  0.7452767  34.94707\n  1.450   41.76534  0.7452767  34.94707\n  1.475   41.76534  0.7452767  34.94707\n  1.500   41.76534  0.7452767  34.94707\n  1.525   41.76534  0.7452767  34.94707\n  1.550   41.76534  0.7452767  34.94707\n  1.575   41.76534  0.7452767  34.94707\n  1.600   41.76534  0.7452767  34.94707\n  1.625   41.76534  0.7452767  34.94707\n  1.650   41.76534  0.7452767  34.94707\n  1.675   41.76534  0.7452767  34.94707\n  1.700   41.76534  0.7452767  34.94707\n  1.725   41.76534  0.7452767  34.94707\n  1.750   41.76534  0.7452767  34.94707\n  1.775   41.76534  0.7452767  34.94707\n  1.800   41.76534  0.7452767  34.94707\n  1.825   41.76534  0.7452767  34.94707\n  1.850   41.76534  0.7452767  34.94707\n  1.875   41.76534  0.7452767  34.94707\n  1.900   41.76534  0.7452767  34.94707\n  1.925   41.76534  0.7452767  34.94707\n  1.950   41.76534  0.7452767  34.94707\n  1.975   41.76534  0.7452767  34.94707\n  2.000   41.76534  0.7452767  34.94707\n  2.025   41.76534  0.7452767  34.94707\n  2.050   41.76534  0.7452767  34.94707\n  2.075   41.76534  0.7452767  34.94707\n  2.100   41.76534  0.7452767  34.94707\n  2.125   41.76534  0.7452767  34.94707\n  2.150   41.76534  0.7452767  34.94707\n  2.175   41.76534  0.7452767  34.94707\n  2.200   41.76534  0.7452767  34.94707\n  2.225   41.76534  0.7452767  34.94707\n  2.250   41.76534  0.7452767  34.94707\n  2.275   41.76534  0.7452767  34.94707\n  2.300   41.76534  0.7452767  34.94707\n  2.325   41.76534  0.7452767  34.94707\n  2.350   41.76534  0.7452767  34.94707\n  2.375   41.76534  0.7452767  34.94707\n  2.400   41.76534  0.7452767  34.94707\n  2.425   41.76534  0.7452767  34.94707\n  2.450   41.76534  0.7452767  34.94707\n  2.475   41.76534  0.7452767  34.94707\n  2.500   41.76534  0.7452767  34.94707\n  2.525   41.76534  0.7452767  34.94707\n  2.550   41.76534  0.7452767  34.94707\n  2.575   41.76534  0.7452767  34.94707\n  2.600   41.76534  0.7452767  34.94707\n  2.625   41.76534  0.7452767  34.94707\n  2.650   41.76534  0.7452767  34.94707\n  2.675   41.76534  0.7452767  34.94707\n  2.700   41.76534  0.7452767  34.94707\n  2.725   41.76534  0.7452767  34.94707\n  2.750   41.76534  0.7452767  34.94707\n  2.775   41.76534  0.7452767  34.94707\n  2.800   41.76534  0.7452767  34.94707\n  2.825   41.76534  0.7452767  34.94707\n  2.850   41.76534  0.7452767  34.94707\n  2.875   41.76534  0.7452767  34.94707\n  2.900   41.76534  0.7452767  34.94707\n  2.925   41.76534  0.7452767  34.94707\n  2.950   41.76534  0.7452767  34.94707\n  2.975   41.76534  0.7452767  34.94707\n  3.000   41.76534  0.7452767  34.94707\n  3.025   41.76534  0.7452767  34.94707\n  3.050   41.76534  0.7452767  34.94707\n  3.075   41.76534  0.7452767  34.94707\n  3.100   41.76534  0.7452767  34.94707\n  3.125   41.76534  0.7452767  34.94707\n  3.150   41.76534  0.7452767  34.94707\n  3.175   41.76534  0.7452767  34.94707\n  3.200   41.76534  0.7452767  34.94707\n  3.225   41.76534  0.7452767  34.94707\n  3.250   41.76534  0.7452767  34.94707\n  3.275   41.76534  0.7452767  34.94707\n  3.300   41.76534  0.7452767  34.94707\n  3.325   41.76534  0.7452767  34.94707\n  3.350   41.76534  0.7452767  34.94707\n  3.375   41.76534  0.7452767  34.94707\n  3.400   41.76534  0.7452767  34.94707\n  3.425   41.76534  0.7452767  34.94707\n  3.450   41.76534  0.7452767  34.94707\n  3.475   41.76534  0.7452767  34.94707\n  3.500   41.76534  0.7452767  34.94707\n  3.525   41.76534  0.7452767  34.94707\n  3.550   41.76534  0.7452767  34.94707\n  3.575   41.76534  0.7452767  34.94707\n  3.600   41.76534  0.7452767  34.94707\n  3.625   41.76534  0.7452767  34.94707\n  3.650   41.76534  0.7452767  34.94707\n  3.675   41.76534  0.7452767  34.94707\n  3.700   41.76534  0.7452767  34.94707\n  3.725   41.76534  0.7452767  34.94707\n  3.750   41.76534  0.7452767  34.94707\n  3.775   41.76534  0.7452767  34.94707\n  3.800   41.76534  0.7452767  34.94707\n  3.825   41.76534  0.7452767  34.94707\n  3.850   41.76534  0.7452767  34.94707\n  3.875   41.76534  0.7452767  34.94707\n  3.900   41.76534  0.7452767  34.94707\n  3.925   41.76534  0.7452767  34.94707\n  3.950   41.76534  0.7452767  34.94707\n  3.975   41.76534  0.7452767  34.94707\n  4.000   41.76534  0.7452767  34.94707\n  4.025   41.76534  0.7452767  34.94707\n  4.050   41.76534  0.7452767  34.94707\n  4.075   41.76534  0.7452767  34.94707\n  4.100   41.76534  0.7452767  34.94707\n  4.125   41.76534  0.7452767  34.94707\n  4.150   41.76534  0.7452767  34.94707\n  4.175   41.76534  0.7452767  34.94707\n  4.200   41.76534  0.7452767  34.94707\n  4.225   41.76534  0.7452767  34.94707\n  4.250   41.76534  0.7452767  34.94707\n  4.275   41.76534  0.7452767  34.94707\n  4.300   41.76534  0.7452767  34.94707\n  4.325   41.76534  0.7452767  34.94707\n  4.350   41.76534  0.7452767  34.94707\n  4.375   41.76534  0.7452767  34.94707\n  4.400   41.76534  0.7452767  34.94707\n  4.425   41.76534  0.7452767  34.94707\n  4.450   41.76534  0.7452767  34.94707\n  4.475   41.76534  0.7452767  34.94707\n  4.500   41.76534  0.7452767  34.94707\n  4.525   41.76534  0.7452767  34.94707\n  4.550   41.76534  0.7452767  34.94707\n  4.575   41.76534  0.7452767  34.94707\n  4.600   41.76534  0.7452767  34.94707\n  4.625   41.76534  0.7452767  34.94707\n  4.650   41.76534  0.7452767  34.94707\n  4.675   41.76534  0.7452767  34.94707\n  4.700   41.76534  0.7452767  34.94707\n  4.725   41.76534  0.7452767  34.94707\n  4.750   41.76534  0.7452767  34.94707\n  4.775   41.76534  0.7452767  34.94707\n  4.800   41.76534  0.7452767  34.94707\n  4.825   41.76534  0.7452767  34.94707\n  4.850   41.76534  0.7452767  34.94707\n  4.875   41.76534  0.7452767  34.94707\n  4.900   41.76534  0.7452767  34.94707\n  4.925   41.76534  0.7452767  34.94707\n  4.950   41.76534  0.7452767  34.94707\n  4.975   41.76534  0.7452767  34.94707\n  5.000   41.76534  0.7452767  34.94707\n\nTuning parameter 'alpha' was held constant at a value of 0\nRMSE was used to select the optimal model using the smallest value.\nThe final values used for the model were alpha = 0 and lambda = 5.\n```\n\n\n:::\n\n```{.r .cell-code}\nggplot(mdl_ridge) +\n  labs(title = \"Regressão Ridge Ajuste do Parametro\", x = \"lambda\")\n```\n\n::: {.cell-output-display}\n![](Aula07.4A_files/figure-html/r4-1.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(varImp(mdl_ridge))\n```\n\n::: {.cell-output-display}\n![](Aula07.4A_files/figure-html/r4-2.png){width=672}\n:::\n:::\n\n\n## Avaliando o modelo com o conjunto de teste\n\nAqui usamos a reamostragem com os dados de teste para avaliar o modelo\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Metricas de desempenho\npr_ridge <- postResample(pred = predict(mdl_ridge, newdata = conj_teste), obs = conj_teste$preco_m)\npr_ridge\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      RMSE   Rsquared        MAE \n42.1947912  0.7291193 35.7865492 \n```\n\n\n:::\n:::\n\n\n## Modelo Final Ridge\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(21)\nmdl_final_ridge <- train(\n  preco_m ~ .,\n  data = conj_treino,\n  method = \"glmnet\",\n  metric = \"RMSE\",\n  preProcess = c(\"center\", \"scale\"),\n  tuneGrid = data.frame(\n    .alpha = mdl_ridge$bestTune$alpha,  # hiperparametro otimizado\n    .lambda = mdl_ridge$bestTune$lambda),  # hiperparametro otimizado\n  trControl = train_control\n  )\nmdl_final_ridge\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nglmnet \n\n1192 samples\n   7 predictor\n\nPre-processing: centered (7), scaled (7) \nResampling: Cross-Validated (10 fold, repeated 5 times) \nSummary of sample sizes: 1072, 1073, 1073, 1074, 1073, 1074, ... \nResampling results:\n\n  RMSE      Rsquared   MAE     \n  41.76534  0.7452767  34.94707\n\nTuning parameter 'alpha' was held constant at a value of 0\nTuning\n parameter 'lambda' was held constant at a value of 5\n```\n\n\n:::\n\n```{.r .cell-code}\nsqrt(mean((conj_teste$preco_m - predict(mdl_final_ridge, newdata = conj_teste)) ^ 2))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 42.19479\n```\n\n\n:::\n:::\n\n\n## LASSO\n\n## Validação Cruzada no LASSO\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(21)\nmdl_lasso <- train(\n  preco_m ~ .,\n  data = conj_treino,\n  method = \"glmnet\",\n  metric = \"RMSE\",\n  preProcess = c(\"center\", \"scale\"),\n  tuneGrid = expand.grid(\n    .alpha = 1,  # regressão lasso\n    .lambda = seq(0, 5, length.out = 201)\n  ),\n  trControl = train_control\n  )\nmdl_lasso$bestTune\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  alpha lambda\n6     1  0.125\n```\n\n\n:::\n\n```{.r .cell-code}\nggplot(mdl_lasso) +\n  labs(title = \"Regressão Lasso - Ajuste de parametro\", x = \"lambda\")\n```\n\n::: {.cell-output-display}\n![](Aula07.4A_files/figure-html/Lasso2-1.png){width=672}\n:::\n:::\n\n\n## Avaliando com conjunto de teste\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Metricas de desempenho\npr_lasso <- postResample(pred = predict(mdl_lasso, newdata = conj_teste), obs = conj_teste$preco_m)\npr_lasso\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      RMSE   Rsquared        MAE \n41.4786153  0.7298093 35.4752055 \n```\n\n\n:::\n:::\n\n\n## Modelo Final Lasso\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(21)\nmdl_final_lasso <- train(\n  preco_m ~ .,\n  data = conj_treino,\n  method = \"glmnet\",\n  metric = \"RMSE\",\n  preProcess = c(\"center\", \"scale\"),\n  tuneGrid = data.frame(\n    .alpha = mdl_lasso$bestTune$alpha,  # hiperparametro otimizado\n    .lambda = mdl_lasso$bestTune$lambda),  # hiperparametro otimizado\n  trControl = train_control\n  )\nmdl_final_lasso\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nglmnet \n\n1192 samples\n   7 predictor\n\nPre-processing: centered (7), scaled (7) \nResampling: Cross-Validated (10 fold, repeated 5 times) \nSummary of sample sizes: 1072, 1073, 1073, 1074, 1073, 1074, ... \nResampling results:\n\n  RMSE      Rsquared   MAE     \n  40.56663  0.7534159  34.35548\n\nTuning parameter 'alpha' was held constant at a value of 1\nTuning\n parameter 'lambda' was held constant at a value of 0.125\n```\n\n\n:::\n\n```{.r .cell-code}\nsqrt(mean((conj_teste$preco_m - predict(mdl_final_lasso, newdata = conj_teste)) ^ 2))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 41.47862\n```\n\n\n:::\n:::\n",
    "supporting": [
      "Aula07.4A_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}