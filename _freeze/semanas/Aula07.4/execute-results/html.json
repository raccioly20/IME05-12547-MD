{
  "hash": "61590e60dd60ec9628c9edd560bba23e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Regularização de Modelos\"\nauthor: \"Ricardo Accioly\"\ndate: \"2024-04-18\"\nformat:\n html:\n    code-link: true\n---\n\n\n## Regularização de modelos\n\n## Carregando Bibliotecas\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(glmnet)\n```\n:::\n\n\n## Carregando os dados\n\nVendas de casas em Seattle entre 2015 e 2016\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvendas_casa <- readRDS(\"home_sales.rds\")\nhead(vendas_casa)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 8\n  selling_price home_age bedrooms bathrooms sqft_living sqft_lot sqft_basement\n          <dbl>    <dbl>    <dbl>     <dbl>       <dbl>    <dbl>         <dbl>\n1        487000       10        4      2.5         2540     5001             0\n2        465000       10        3      2.25        1530     1245           480\n3        411000       18        2      2           1130     1148           330\n4        635000        4        3      2.5         3350     4007           800\n5        380000       24        5      2.5         2130     8428             0\n6        495000       21        3      3.5         1650     1577           550\n# ℹ 1 more variable: floors <dbl>\n```\n\n\n:::\n\n```{.r .cell-code}\nvendas_casa <- vendas_casa %>% rename(preco=selling_price,\n                                      idade=home_age,\n                                      quartos=bedrooms,\n                                      banheiros= bathrooms,\n                                      m2_princ=sqft_living,\n                                      m2_tot=sqft_lot,\n                                      m2_porao=sqft_basement,\n                                      andares=floors\n                                      )\nsummary(vendas_casa)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     preco            idade          quartos        banheiros    \n Min.   :350000   Min.   : 0.00   Min.   :1.000   Min.   :0.750  \n 1st Qu.:410000   1st Qu.:12.00   1st Qu.:3.000   1st Qu.:2.438  \n Median :470000   Median :19.00   Median :3.000   Median :2.500  \n Mean   :479085   Mean   :18.53   Mean   :3.338   Mean   :2.473  \n 3rd Qu.:541625   3rd Qu.:25.00   3rd Qu.:4.000   3rd Qu.:2.500  \n Max.   :650000   Max.   :49.00   Max.   :8.000   Max.   :5.000  \n    m2_princ        m2_tot          m2_porao         andares     \n Min.   : 550   Min.   :   600   Min.   :   0.0   Min.   :1.000  \n 1st Qu.:1640   1st Qu.:  3200   1st Qu.:   0.0   1st Qu.:2.000  \n Median :2060   Median :  5508   Median :   0.0   Median :2.000  \n Mean   :2087   Mean   : 11891   Mean   : 129.7   Mean   :1.865  \n 3rd Qu.:2500   3rd Qu.:  8644   3rd Qu.: 122.5   3rd Qu.:2.000  \n Max.   :3880   Max.   :415126   Max.   :1660.0   Max.   :2.000  \n```\n\n\n:::\n\n```{.r .cell-code}\nvendas_casa <- vendas_casa %>% mutate(preco_m=preco/1000) %>% select(-preco)\nsummary(vendas_casa)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     idade          quartos        banheiros        m2_princ   \n Min.   : 0.00   Min.   :1.000   Min.   :0.750   Min.   : 550  \n 1st Qu.:12.00   1st Qu.:3.000   1st Qu.:2.438   1st Qu.:1640  \n Median :19.00   Median :3.000   Median :2.500   Median :2060  \n Mean   :18.53   Mean   :3.338   Mean   :2.473   Mean   :2087  \n 3rd Qu.:25.00   3rd Qu.:4.000   3rd Qu.:2.500   3rd Qu.:2500  \n Max.   :49.00   Max.   :8.000   Max.   :5.000   Max.   :3880  \n     m2_tot          m2_porao         andares         preco_m     \n Min.   :   600   Min.   :   0.0   Min.   :1.000   Min.   :350.0  \n 1st Qu.:  3200   1st Qu.:   0.0   1st Qu.:2.000   1st Qu.:410.0  \n Median :  5508   Median :   0.0   Median :2.000   Median :470.0  \n Mean   : 11891   Mean   : 129.7   Mean   :1.865   Mean   :479.1  \n 3rd Qu.:  8644   3rd Qu.: 122.5   3rd Qu.:2.000   3rd Qu.:541.6  \n Max.   :415126   Max.   :1660.0   Max.   :2.000   Max.   :650.0  \n```\n\n\n:::\n:::\n\n\n## Conjunto de treino e de teste\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(caret)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nCarregando pacotes exigidos: lattice\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'caret'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following object is masked from 'package:purrr':\n\n    lift\n```\n\n\n:::\n\n```{.r .cell-code}\nset.seed(21)\nnrow(vendas_casa)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1492\n```\n\n\n:::\n\n```{.r .cell-code}\ny <- vendas_casa$preco_m\nindice_teste <- createDataPartition(y, times = 1, p = 0.2, list = FALSE)\n\nconj_treino <- vendas_casa[-indice_teste,]\nconj_teste <- vendas_casa[indice_teste,]\n\nstr(conj_treino)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\ntibble [1,192 × 8] (S3: tbl_df/tbl/data.frame)\n $ idade    : num [1:1192] 10 18 4 21 19 24 3 16 20 29 ...\n $ quartos  : num [1:1192] 3 2 3 3 3 2 4 3 3 3 ...\n $ banheiros: num [1:1192] 2.25 2 2.5 3.5 2.25 1 2.5 2.75 2.75 2.5 ...\n $ m2_princ : num [1:1192] 1530 1130 3350 1650 1430 1430 2140 2100 2930 1960 ...\n $ m2_tot   : num [1:1192] 1245 1148 4007 1577 4777 ...\n $ m2_porao : num [1:1192] 480 330 800 550 0 420 0 590 1070 0 ...\n $ andares  : num [1:1192] 2 2 2 2 2 1 2 2 1 2 ...\n $ preco_m  : num [1:1192] 465 411 635 495 355 ...\n```\n\n\n:::\n\n```{.r .cell-code}\nstr(conj_teste)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\ntibble [300 × 8] (S3: tbl_df/tbl/data.frame)\n $ idade    : num [1:300] 10 24 19 11 3 28 9 17 9 19 ...\n $ quartos  : num [1:300] 4 5 3 4 4 5 3 3 3 3 ...\n $ banheiros: num [1:300] 2.5 2.5 2 2.5 2.75 3 2.5 3.5 3.5 2.25 ...\n $ m2_princ : num [1:300] 2540 2130 2190 1920 2360 ...\n $ m2_tot   : num [1:300] 5001 8428 19800 9000 15100 ...\n $ m2_porao : num [1:300] 0 0 0 0 0 0 0 770 770 145 ...\n $ andares  : num [1:300] 2 2 1 2 1 2 2 2 2 2 ...\n $ preco_m  : num [1:300] 487 380 465 425 535 ...\n```\n\n\n:::\n\n```{.r .cell-code}\ngt::gt(head(conj_treino, 10))\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"ajgaokapiz\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#ajgaokapiz table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#ajgaokapiz thead, #ajgaokapiz tbody, #ajgaokapiz tfoot, #ajgaokapiz tr, #ajgaokapiz td, #ajgaokapiz th {\n  border-style: none;\n}\n\n#ajgaokapiz p {\n  margin: 0;\n  padding: 0;\n}\n\n#ajgaokapiz .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#ajgaokapiz .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#ajgaokapiz .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#ajgaokapiz .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#ajgaokapiz .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#ajgaokapiz .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#ajgaokapiz .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#ajgaokapiz .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#ajgaokapiz .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#ajgaokapiz .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#ajgaokapiz .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#ajgaokapiz .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#ajgaokapiz .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#ajgaokapiz .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#ajgaokapiz .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#ajgaokapiz .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#ajgaokapiz .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#ajgaokapiz .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#ajgaokapiz .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ajgaokapiz .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#ajgaokapiz .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#ajgaokapiz .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#ajgaokapiz .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ajgaokapiz .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#ajgaokapiz .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#ajgaokapiz .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#ajgaokapiz .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ajgaokapiz .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#ajgaokapiz .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#ajgaokapiz .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#ajgaokapiz .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#ajgaokapiz .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#ajgaokapiz .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ajgaokapiz .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#ajgaokapiz .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ajgaokapiz .gt_left {\n  text-align: left;\n}\n\n#ajgaokapiz .gt_center {\n  text-align: center;\n}\n\n#ajgaokapiz .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#ajgaokapiz .gt_font_normal {\n  font-weight: normal;\n}\n\n#ajgaokapiz .gt_font_bold {\n  font-weight: bold;\n}\n\n#ajgaokapiz .gt_font_italic {\n  font-style: italic;\n}\n\n#ajgaokapiz .gt_super {\n  font-size: 65%;\n}\n\n#ajgaokapiz .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#ajgaokapiz .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#ajgaokapiz .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#ajgaokapiz .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#ajgaokapiz .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#ajgaokapiz .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#ajgaokapiz .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"idade\">idade</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"quartos\">quartos</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"banheiros\">banheiros</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"m2_princ\">m2_princ</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"m2_tot\">m2_tot</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"m2_porao\">m2_porao</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"andares\">andares</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"preco_m\">preco_m</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"idade\" class=\"gt_row gt_right\">10</td>\n<td headers=\"quartos\" class=\"gt_row gt_right\">3</td>\n<td headers=\"banheiros\" class=\"gt_row gt_right\">2.25</td>\n<td headers=\"m2_princ\" class=\"gt_row gt_right\">1530</td>\n<td headers=\"m2_tot\" class=\"gt_row gt_right\">1245</td>\n<td headers=\"m2_porao\" class=\"gt_row gt_right\">480</td>\n<td headers=\"andares\" class=\"gt_row gt_right\">2</td>\n<td headers=\"preco_m\" class=\"gt_row gt_right\">465.000</td></tr>\n    <tr><td headers=\"idade\" class=\"gt_row gt_right\">18</td>\n<td headers=\"quartos\" class=\"gt_row gt_right\">2</td>\n<td headers=\"banheiros\" class=\"gt_row gt_right\">2.00</td>\n<td headers=\"m2_princ\" class=\"gt_row gt_right\">1130</td>\n<td headers=\"m2_tot\" class=\"gt_row gt_right\">1148</td>\n<td headers=\"m2_porao\" class=\"gt_row gt_right\">330</td>\n<td headers=\"andares\" class=\"gt_row gt_right\">2</td>\n<td headers=\"preco_m\" class=\"gt_row gt_right\">411.000</td></tr>\n    <tr><td headers=\"idade\" class=\"gt_row gt_right\">4</td>\n<td headers=\"quartos\" class=\"gt_row gt_right\">3</td>\n<td headers=\"banheiros\" class=\"gt_row gt_right\">2.50</td>\n<td headers=\"m2_princ\" class=\"gt_row gt_right\">3350</td>\n<td headers=\"m2_tot\" class=\"gt_row gt_right\">4007</td>\n<td headers=\"m2_porao\" class=\"gt_row gt_right\">800</td>\n<td headers=\"andares\" class=\"gt_row gt_right\">2</td>\n<td headers=\"preco_m\" class=\"gt_row gt_right\">635.000</td></tr>\n    <tr><td headers=\"idade\" class=\"gt_row gt_right\">21</td>\n<td headers=\"quartos\" class=\"gt_row gt_right\">3</td>\n<td headers=\"banheiros\" class=\"gt_row gt_right\">3.50</td>\n<td headers=\"m2_princ\" class=\"gt_row gt_right\">1650</td>\n<td headers=\"m2_tot\" class=\"gt_row gt_right\">1577</td>\n<td headers=\"m2_porao\" class=\"gt_row gt_right\">550</td>\n<td headers=\"andares\" class=\"gt_row gt_right\">2</td>\n<td headers=\"preco_m\" class=\"gt_row gt_right\">495.000</td></tr>\n    <tr><td headers=\"idade\" class=\"gt_row gt_right\">19</td>\n<td headers=\"quartos\" class=\"gt_row gt_right\">3</td>\n<td headers=\"banheiros\" class=\"gt_row gt_right\">2.25</td>\n<td headers=\"m2_princ\" class=\"gt_row gt_right\">1430</td>\n<td headers=\"m2_tot\" class=\"gt_row gt_right\">4777</td>\n<td headers=\"m2_porao\" class=\"gt_row gt_right\">0</td>\n<td headers=\"andares\" class=\"gt_row gt_right\">2</td>\n<td headers=\"preco_m\" class=\"gt_row gt_right\">355.000</td></tr>\n    <tr><td headers=\"idade\" class=\"gt_row gt_right\">24</td>\n<td headers=\"quartos\" class=\"gt_row gt_right\">2</td>\n<td headers=\"banheiros\" class=\"gt_row gt_right\">1.00</td>\n<td headers=\"m2_princ\" class=\"gt_row gt_right\">1430</td>\n<td headers=\"m2_tot\" class=\"gt_row gt_right\">365904</td>\n<td headers=\"m2_porao\" class=\"gt_row gt_right\">420</td>\n<td headers=\"andares\" class=\"gt_row gt_right\">1</td>\n<td headers=\"preco_m\" class=\"gt_row gt_right\">356.000</td></tr>\n    <tr><td headers=\"idade\" class=\"gt_row gt_right\">3</td>\n<td headers=\"quartos\" class=\"gt_row gt_right\">4</td>\n<td headers=\"banheiros\" class=\"gt_row gt_right\">2.50</td>\n<td headers=\"m2_princ\" class=\"gt_row gt_right\">2140</td>\n<td headers=\"m2_tot\" class=\"gt_row gt_right\">7245</td>\n<td headers=\"m2_porao\" class=\"gt_row gt_right\">0</td>\n<td headers=\"andares\" class=\"gt_row gt_right\">2</td>\n<td headers=\"preco_m\" class=\"gt_row gt_right\">495.000</td></tr>\n    <tr><td headers=\"idade\" class=\"gt_row gt_right\">16</td>\n<td headers=\"quartos\" class=\"gt_row gt_right\">3</td>\n<td headers=\"banheiros\" class=\"gt_row gt_right\">2.75</td>\n<td headers=\"m2_princ\" class=\"gt_row gt_right\">2100</td>\n<td headers=\"m2_tot\" class=\"gt_row gt_right\">10362</td>\n<td headers=\"m2_porao\" class=\"gt_row gt_right\">590</td>\n<td headers=\"andares\" class=\"gt_row gt_right\">2</td>\n<td headers=\"preco_m\" class=\"gt_row gt_right\">525.000</td></tr>\n    <tr><td headers=\"idade\" class=\"gt_row gt_right\">20</td>\n<td headers=\"quartos\" class=\"gt_row gt_right\">3</td>\n<td headers=\"banheiros\" class=\"gt_row gt_right\">2.75</td>\n<td headers=\"m2_princ\" class=\"gt_row gt_right\">2930</td>\n<td headers=\"m2_tot\" class=\"gt_row gt_right\">5569</td>\n<td headers=\"m2_porao\" class=\"gt_row gt_right\">1070</td>\n<td headers=\"andares\" class=\"gt_row gt_right\">1</td>\n<td headers=\"preco_m\" class=\"gt_row gt_right\">559.900</td></tr>\n    <tr><td headers=\"idade\" class=\"gt_row gt_right\">29</td>\n<td headers=\"quartos\" class=\"gt_row gt_right\">3</td>\n<td headers=\"banheiros\" class=\"gt_row gt_right\">2.50</td>\n<td headers=\"m2_princ\" class=\"gt_row gt_right\">1960</td>\n<td headers=\"m2_tot\" class=\"gt_row gt_right\">8469</td>\n<td headers=\"m2_porao\" class=\"gt_row gt_right\">0</td>\n<td headers=\"andares\" class=\"gt_row gt_right\">2</td>\n<td headers=\"preco_m\" class=\"gt_row gt_right\">552.321</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n\n:::\n:::\n\n\n## Métodos de Regularização\n\nO pacote glmnet não usa a linguagem de formula, em particular nós devemos passar $x$ como uma matriz e $y$ como um vetor, pois não se usa a sintaxe $y \\sim x$. Com isso será necessário ajustar x e y. A função model.matrix() é particularmente útil para criar x; não só produz uma matriz correspondente as variáveis explicativas, **mas também transforma automaticamente quaisquer variáveis qualitativas em variáveis dummy. Esta última propriedade é importante porque o glmnet() só pode tomar insumos numéricos e quantitativos.**\n\n**O pacote glmnet também por default padroniza as variáveis, o que é importante para a regressão Ridge e também para o LASSO. Ele posteriormente retorna os coeficientes para a escala inicial.**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx_treino <- model.matrix(preco_m ~ . , data = conj_treino)[, -1]\ny_treino <- conj_treino$preco_m\n\nx_teste <- model.matrix(preco_m ~ . , data = conj_teste)[, -1]\ny_teste = conj_teste$preco_m\n```\n:::\n\n\n## Regressão Ridge\n\nPrimeiro vamos ajustar um modelo de regressão Ridge. Isso é conseguido chamando `glmnet()` com `alpha=0`, se `alpha=1` então `glmnet()` ajusta um lasso.(veja o arquivo de ajuda).\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## Estabelecendo um grid de valores para lambda\ngrid <- 10^seq(-2, 10, length = 100)\najusreg.ridge <- glmnet(x_treino, y_treino, alpha=0, lambda = grid)\n```\n:::\n\n\nPor padrão, a função `glmnet()` executa a regressão ridge automaticamente selecionando a faixa de valores de $\\lambda$. No entanto, aqui nós escolhemos implementar usando uma grade de valores que variam de $\\lambda = 10^{-2}$ a $\\lambda = 10^{10}$, cobrindo toda a gama de cenários do modelo nulo contendo apenas o coeficiente linear até o ajuste dos mínimos quadrados.\n\nTambém podemos calcular o modelo para um valor particular de $\\lambda$ que não é um dos valores de grade. Observe que, por padrão, a função `glmnet()` padroniza as variáveis para que elas estejam na mesma escala. **Esta padronização é muito importante no caso da regressão Ridge, pois ela é afetada pela mudança de escala das variáveis explicativas.**\n\nAssociado a cada valor de $\\lambda$ existe um vetor de coeficientes de regressão de ridge, que é armazenado em uma matriz que pode ser acessada por 'coef()'. Neste caso, é uma matriz $13 \\times 100$, com 13 linhas (uma para cada preditor, mais uma para o coeficiente linear) e 100 colunas (uma para cada valor de $\\lambda$).\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndim(coef(ajusreg.ridge))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1]   8 100\n```\n\n\n:::\n\n```{.r .cell-code}\nplot(ajusreg.ridge, xvar=\"lambda\", label=TRUE) # Representando os coeficientes\n```\n\n::: {.cell-output-display}\n![](Aula07.4_files/figure-html/r1-1.png){width=672}\n:::\n:::\n\n\nQuando $\\lambda$ é grande o esperado é que os coeficentes sejam pequenos e quando $\\lambda$ é pequeno os coeficientes assumem valores maiores.\n\n\n::: {.cell}\n\n```{.r .cell-code}\najusreg.ridge$lambda[1] # Mostra primeiro valor de lambda\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1e+10\n```\n\n\n:::\n\n```{.r .cell-code}\ncoef(ajusreg.ridge)[,1] # Mostra os coeficientes associados com o primeiro valor\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  (Intercept)         idade       quartos     banheiros      m2_princ \n 4.793155e+02 -2.734498e-08  2.861996e-07  5.797974e-07  9.012053e-10 \n       m2_tot      m2_porao       andares \n 3.183259e-12 -3.419035e-11  3.936601e-07 \n```\n\n\n:::\n\n```{.r .cell-code}\najusreg.ridge$lambda[100] # Mostra centésimo valor de lambda\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.01\n```\n\n\n:::\n\n```{.r .cell-code}\ncoef(ajusreg.ridge)[,100] # Mostra os coeficientes associados com o centésimo valor\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  (Intercept)         idade       quartos     banheiros      m2_princ \n 2.558886e+02 -9.299049e-01 -4.458647e+01  1.038811e+01  1.439939e-01 \n       m2_tot      m2_porao       andares \n 9.087628e-05 -3.568248e-03  3.371000e+01 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(plotmo)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nCarregando pacotes exigidos: Formula\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nCarregando pacotes exigidos: plotrix\n```\n\n\n:::\n\n```{.r .cell-code}\nplot_glmnet(ajusreg.ridge)\n```\n\n::: {.cell-output-display}\n![](Aula07.4_files/figure-html/r3-1.png){width=672}\n:::\n:::\n\n\n## Cross-Validation no Ridge\n\nNós podemos usar o k-fold cross validation para identificar o melhor valor de $\\lambda$\n\nA biblioteca glmnet já tem internamente uma função para uso do crosss validation. O default são 10 envelopes de dados `nfold=10`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(21)\nridge_cv <- cv.glmnet(x_treino,y_treino, alpha=0) ## por padrão k=10\nplot(ridge_cv)\n```\n\n::: {.cell-output-display}\n![](Aula07.4_files/figure-html/r4-1.png){width=672}\n:::\n\n```{.r .cell-code}\nm_lamb <- ridge_cv$lambda.min  # Seleciona o lambda que minimiza o MSE (EQM) de treino\nm_lamb\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 6.425292\n```\n\n\n:::\n\n```{.r .cell-code}\nlog(m_lamb)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1.860242\n```\n\n\n:::\n\n```{.r .cell-code}\ncoef(ridge_cv, s=m_lamb)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n8 x 1 sparse Matrix of class \"dgCMatrix\"\n                       s1\n(Intercept)  2.642227e+02\nidade       -1.136747e+00\nquartos     -2.993272e+01\nbanheiros    1.272875e+01\nm2_princ     1.185102e-01\nm2_tot       1.373143e-04\nm2_porao    -5.244311e-03\nandares      3.030654e+01\n```\n\n\n:::\n:::\n\n\n## Avaliando com conjunto de teste\n\nEm seguida avaliamos seu MSE no conjunto de teste, usando $\\lambda$ = m_lamb. Observe o uso da função 'predict()': desta vez temos previsões para um conjunto de teste, com o argumento `newx`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\najusreg.ridge2 <- glmnet(x_treino, y_treino, alpha=0, lambda = m_lamb)\ny_prev <- predict(ajusreg.ridge2, s = m_lamb, newx = x_teste)\n# Metricas de desempenho\nsqrt(mean((y_prev - y_teste)^2))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 42.19339\n```\n\n\n:::\n:::\n\n\n## Comparando real vs previsão no conjunto de teste\n\n\n::: {.cell}\n\n```{.r .cell-code}\nv_teste <- data.frame(y_teste, y_prev)\nggplot(v_teste, aes(x=y_prev, y=y_teste)) +geom_point() +\n  geom_abline(color = \"darkblue\") +\n  ggtitle(\"Preço da Casa vs. Previsões do modelo Ridge\")\n```\n\n::: {.cell-output-display}\n![](Aula07.4_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n\n## LASSO\n\nPrimeiro ajustamos com todos os dados como no caso do Ridge\n\n\n::: {.cell}\n\n```{.r .cell-code}\najusreg.lasso <- glmnet(x_treino,y_treino, alpha = 1)\nplot(ajusreg.lasso, xvar=\"lambda\", label=TRUE) # Representando os coeficientes\n```\n\n::: {.cell-output-display}\n![](Aula07.4_files/figure-html/LASSO-1.png){width=672}\n:::\n\n```{.r .cell-code}\nplot_glmnet(ajusreg.lasso)\n```\n\n::: {.cell-output-display}\n![](Aula07.4_files/figure-html/LASSO-2.png){width=672}\n:::\n:::\n\n\n## Validação Cruzada no LASSO\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlasso_cv <- cv.glmnet(x_treino,y_treino, alpha = 1)\nplot(lasso_cv)\n```\n\n::: {.cell-output-display}\n![](Aula07.4_files/figure-html/Lasso2-1.png){width=672}\n:::\n\n```{.r .cell-code}\nm_lamb1 <- lasso_cv$lambda.min  # Seleciona o lambda que minimiza o MSE de treino\nm_lamb1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.1384287\n```\n\n\n:::\n\n```{.r .cell-code}\nlog(m_lamb1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] -1.9774\n```\n\n\n:::\n\n```{.r .cell-code}\ncoef(lasso_cv, s=m_lamb1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n8 x 1 sparse Matrix of class \"dgCMatrix\"\n                       s1\n(Intercept)  2.567612e+02\nidade       -9.248281e-01\nquartos     -4.393777e+01\nbanheiros    9.756224e+00\nm2_princ     1.434165e-01\nm2_tot       8.570819e-05\nm2_porao    -2.919595e-03\nandares      3.350271e+01\n```\n\n\n:::\n:::\n\n\n## Avaliando com conjunto de teste\n\n\n::: {.cell}\n\n```{.r .cell-code}\najusreg.lasso2 <- glmnet(x_treino, y_treino, alpha=1, lambda = m_lamb1)\ny_prev <- predict(ajusreg.lasso2, s = m_lamb1, newx = x_teste)\n# Metricas de desempenho\nsqrt(mean((y_prev - y_teste)^2))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 41.48019\n```\n\n\n:::\n:::\n\n\n## Comparando real vs previsão no conjunto de teste\n\n\n::: {.cell}\n\n```{.r .cell-code}\nv_teste <- data.frame(y_teste, y_prev)\nggplot(v_teste, aes(x=y_prev, y=y_teste)) +geom_point() +\n  geom_abline(color = \"darkblue\") +\n  ggtitle(\"Preço da Casa vs. Previsões do modelo Ridge\")\n```\n\n::: {.cell-output-display}\n![](Aula07.4_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "Aula07.4_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}