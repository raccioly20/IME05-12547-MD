{
  "hash": "d83abda89ae486d66c1e2077d2938d78",
  "result": {
    "markdown": "---\ntitle: \"Classificação - Primeiros Passos\"\nauthor: \"Ricardo Accioly\"\ndate: \"2023-05-19\"\noutput:\n html_document:\n    toc: yes\n    code_download: yes\n---\n\n\n# Primeiros Passos\n\nBaseado no livro Introduction to Data Science: Data Analysis and Prediction Algorithms with R, Rafael A. Irizarry. (https://rafalab.github.io/dsbook/)\n\n\n\n\n\n## Carregando Bibliotecas\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(caret)\nlibrary(dslabs)\ndata(heights)\n```\n:::\n\n\n## Traduzindo\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(heights)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     sex height\n1   Male     75\n2   Male     70\n3   Male     68\n4   Male     74\n5   Male     61\n6 Female     65\n```\n:::\n\n```{.r .cell-code}\nstr(heights)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n'data.frame':\t1050 obs. of  2 variables:\n $ sex   : Factor w/ 2 levels \"Female\",\"Male\": 2 2 2 2 2 1 1 1 1 2 ...\n $ height: num  75 70 68 74 61 65 66 62 66 67 ...\n```\n:::\n\n```{.r .cell-code}\nalturas <- heights %>%\n  # traduz dados para o português e transforma polegada para metro\n  mutate(\n          sex = case_when(\n                           sex == \"Male\" ~ \"Masculino\",\n                           sex == \"Female\" ~ \"Feminino\"\n                          ), \n          altura = height * 2.54 / 100 ) %>%\n  rename( sexo = sex) %>% \n  select(sexo , altura)\nhead(alturas)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       sexo altura\n1 Masculino 1.9050\n2 Masculino 1.7780\n3 Masculino 1.7272\n4 Masculino 1.8796\n5 Masculino 1.5494\n6  Feminino 1.6510\n```\n:::\n\n```{.r .cell-code}\nstr(alturas)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n'data.frame':\t1050 obs. of  2 variables:\n $ sexo  : chr  \"Masculino\" \"Masculino\" \"Masculino\" \"Masculino\" ...\n $ altura: num  1.9 1.78 1.73 1.88 1.55 ...\n```\n:::\n:::\n\n\n## Alterando\n\n\n::: {.cell}\n\n```{.r .cell-code}\nalturas <- data.frame(sexo = factor(alturas$sexo), altura = alturas$altura)\nstr(alturas)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n'data.frame':\t1050 obs. of  2 variables:\n $ sexo  : Factor w/ 2 levels \"Feminino\",\"Masculino\": 2 2 2 2 2 1 1 1 1 2 ...\n $ altura: num  1.9 1.78 1.73 1.88 1.55 ...\n```\n:::\n\n```{.r .cell-code}\nhead(alturas)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       sexo altura\n1 Masculino 1.9050\n2 Masculino 1.7780\n3 Masculino 1.7272\n4 Masculino 1.8796\n5 Masculino 1.5494\n6  Feminino 1.6510\n```\n:::\n:::\n\n\n## Definindo x e y\n\n\n::: {.cell}\n\n```{.r .cell-code}\ny <- alturas$sexo\nx <- alturas$altura\n```\n:::\n\n\n## Treino e Teste\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\nindice_teste <- createDataPartition(y, times = 1, p = 0.2, list = FALSE)\nconj_teste <- alturas[indice_teste, ]\nconj_treino <- alturas[-indice_teste, ]\nhead(conj_teste)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n        sexo altura\n4  Masculino 1.8796\n7   Feminino 1.6764\n9   Feminino 1.6764\n14 Masculino 1.7272\n16 Masculino 1.6764\n25 Masculino 1.8288\n```\n:::\n\n```{.r .cell-code}\nstr(conj_teste)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n'data.frame':\t211 obs. of  2 variables:\n $ sexo  : Factor w/ 2 levels \"Feminino\",\"Masculino\": 2 1 1 2 2 2 2 2 2 2 ...\n $ altura: num  1.88 1.68 1.68 1.73 1.68 ...\n```\n:::\n\n```{.r .cell-code}\nsummary(conj_teste)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n        sexo         altura     \n Feminino : 48   Min.   :1.366  \n Masculino:163   1st Qu.:1.676  \n                 Median :1.727  \n                 Mean   :1.735  \n                 3rd Qu.:1.803  \n                 Max.   :2.032  \n```\n:::\n\n```{.r .cell-code}\nhead(conj_treino)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       sexo altura\n1 Masculino 1.9050\n2 Masculino 1.7780\n3 Masculino 1.7272\n5 Masculino 1.5494\n6  Feminino 1.6510\n8  Feminino 1.5748\n```\n:::\n\n```{.r .cell-code}\nstr(conj_treino)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n'data.frame':\t839 obs. of  2 variables:\n $ sexo  : Factor w/ 2 levels \"Feminino\",\"Masculino\": 2 2 2 2 1 1 2 2 2 2 ...\n $ altura: num  1.9 1.78 1.73 1.55 1.65 ...\n```\n:::\n\n```{.r .cell-code}\nsummary(conj_treino)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n        sexo         altura     \n Feminino :190   Min.   :1.270  \n Masculino:649   1st Qu.:1.676  \n                 Median :1.750  \n                 Mean   :1.736  \n                 3rd Qu.:1.803  \n                 Max.   :2.100  \n```\n:::\n:::\n\n\n## Chutar a resposta!!!!!\n\n\n::: {.cell}\n\n```{.r .cell-code}\ny_chapeu <- sample(c(\"Masculino\", \"Feminino\"), length(indice_teste), replace = TRUE) %>% \n  factor(levels = levels(conj_teste$sexo))\n```\n:::\n\n\n## Calcula precisão\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmean(y_chapeu == conj_teste$sexo)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.549763\n```\n:::\n:::\n\n\n## Melhorando\n\n\n::: {.cell}\n\n```{.r .cell-code}\nalturas %>% group_by(sexo) %>% summarize(mean(altura), sd(altura))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 3\n  sexo      `mean(altura)` `sd(altura)`\n  <fct>              <dbl>        <dbl>\n1 Feminino            1.65       0.0955\n2 Masculino           1.76       0.0917\n```\n:::\n\n```{.r .cell-code}\nmedia_Homem <- mean(alturas[alturas$sexo==\"Masculino\",]$altura)\ndesv_pad_Homem <- sd(alturas[alturas$sexo==\"Masculino\",]$altura)\nmedia_Homem\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1.760595\n```\n:::\n\n```{.r .cell-code}\ndesv_pad_Homem\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.09172\n```\n:::\n\n```{.r .cell-code}\nmedia_Homem - 2*desv_pad_Homem\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1.577155\n```\n:::\n\n```{.r .cell-code}\ny_chapeu <- ifelse(x > media_Homem - 2*desv_pad_Homem , \"Masculino\", \"Feminino\") %>% factor(levels = levels(conj_teste$sexo))\nmean(y == y_chapeu)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.7933333\n```\n:::\n:::\n\n\n## Qual o melhor ponto de corte?\n\n\n::: {.cell}\n\n```{.r .cell-code}\npontodecorte <- seq(1.54, 1.78, by = 0.01)\nprecisao <- map_dbl(pontodecorte, function(x){\n  y_chapeu <- ifelse(conj_treino$altura > x, \"Masculino\", \"Feminino\") %>% \n    factor(levels = levels(conj_teste$sexo))\n  mean(y_chapeu == conj_treino$sexo)\n})\nmax(precisao)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.8307509\n```\n:::\n\n```{.r .cell-code}\nmelhor_ponto <- pontodecorte[which.max(precisao)]\nmelhor_ponto\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1.65\n```\n:::\n\n```{.r .cell-code}\nplot(pontodecorte, precisao) \nabline(v=melhor_ponto)\n```\n\n::: {.cell-output-display}\n![](imagens/Aula08/melhorando-pontodecorte-1.png){width=864}\n:::\n\n```{.r .cell-code}\ny_chapeu <- ifelse(conj_teste$altura > melhor_ponto, \"Masculino\", \"Feminino\") %>% \n  factor(levels = levels(conj_teste$sexo))\ny_chapeu <- factor(y_chapeu)\nmean(y_chapeu == conj_teste$sexo)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.8530806\n```\n:::\n:::\n\n\n## Melhorando o gráfico\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\ndados <- data.frame(pontodecorte, precisao)\nggplot(data=dados, aes(x=pontodecorte, y=precisao)) + geom_point() +\n       geom_vline(xintercept = melhor_ponto, linetype=\"dashed\", color=\"red\")\n```\n\n::: {.cell-output-display}\n![](imagens/Aula08/grafico-1.png){width=864}\n:::\n:::\n\n\n## Matriz de Confusão\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(previsto = y_chapeu, real = conj_teste$sexo)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n           real\nprevisto    Feminino Masculino\n  Feminino        26         9\n  Masculino       22       154\n```\n:::\n\n```{.r .cell-code}\nconj_teste %>% \n  mutate(y_chapeu = y_chapeu) %>%\n  group_by(sexo) %>% \n  summarize(precisao = mean(y_chapeu == sexo))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 2\n  sexo      precisao\n  <fct>        <dbl>\n1 Feminino     0.542\n2 Masculino    0.945\n```\n:::\n\n```{.r .cell-code}\nconfusionMatrix(data = y_chapeu, reference = conj_teste$sexo)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nConfusion Matrix and Statistics\n\n           Reference\nPrediction  Feminino Masculino\n  Feminino        26         9\n  Masculino       22       154\n                                         \n               Accuracy : 0.8531         \n                 95% CI : (0.798, 0.8979)\n    No Information Rate : 0.7725         \n    P-Value [Acc > NIR] : 0.002359       \n                                         \n                  Kappa : 0.5378         \n                                         \n Mcnemar's Test P-Value : 0.031141       \n                                         \n            Sensitivity : 0.5417         \n            Specificity : 0.9448         \n         Pos Pred Value : 0.7429         \n         Neg Pred Value : 0.8750         \n             Prevalence : 0.2275         \n         Detection Rate : 0.1232         \n   Detection Prevalence : 0.1659         \n      Balanced Accuracy : 0.7432         \n                                         \n       'Positive' Class : Feminino       \n                                         \n```\n:::\n:::\n\n\n## Maximizando a estatística F1\n\n\n::: {.cell}\n\n```{.r .cell-code}\npontodecorte <- seq(1.54, 1.78, by = 0.01)\nF_1 <- map_dbl(pontodecorte, function(x){\n  y_chapeu <- ifelse(conj_treino$altura > x, \"Masculino\", \"Feminino\") %>% \n    factor(levels = levels(conj_teste$sexo))\n  F_meas(data = y_chapeu, reference = factor(conj_treino$sexo))\n})\nmax(F_1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.616092\n```\n:::\n\n```{.r .cell-code}\nmelhor_ponto <- pontodecorte[which.max(F_1)]\nmelhor_ponto\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1.68\n```\n:::\n\n```{.r .cell-code}\ndados <- data.frame(pontodecorte, F_1)\nggplot(data=dados, aes(x=pontodecorte, y=F_1)) + geom_point() +\n       geom_vline(xintercept = melhor_ponto, linetype=\"dashed\", color=\"red\")\n```\n\n::: {.cell-output-display}\n![](imagens/Aula08/max-f1-1.png){width=864}\n:::\n\n```{.r .cell-code}\ny_chapeu <- ifelse(conj_teste$altura > melhor_ponto, \"Masculino\", \"Feminino\") %>% \n  factor(levels = levels(conj_teste$sexo))\nconfusionMatrix(data = y_chapeu, reference = conj_teste$sexo)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nConfusion Matrix and Statistics\n\n           Reference\nPrediction  Feminino Masculino\n  Feminino        32        26\n  Masculino       16       137\n                                          \n               Accuracy : 0.8009          \n                 95% CI : (0.7406, 0.8526)\n    No Information Rate : 0.7725          \n    P-Value [Acc > NIR] : 0.1839          \n                                          \n                  Kappa : 0.4724          \n                                          \n Mcnemar's Test P-Value : 0.1649          \n                                          \n            Sensitivity : 0.6667          \n            Specificity : 0.8405          \n         Pos Pred Value : 0.5517          \n         Neg Pred Value : 0.8954          \n             Prevalence : 0.2275          \n         Detection Rate : 0.1517          \n   Detection Prevalence : 0.2749          \n      Balanced Accuracy : 0.7536          \n                                          \n       'Positive' Class : Feminino        \n                                          \n```\n:::\n:::\n\n\n## Voltando a chutar\n\n\n::: {.cell}\n\n```{.r .cell-code}\np <- 0.9\ny_chapeu <- sample(c(\"Masculino\", \"Feminino\"), length(indice_teste), \n                   replace = TRUE, prob=c(p, 1-p)) %>% factor(levels = levels(conj_teste$sexo))\nmean(y_chapeu == conj_teste$sexo)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.6919431\n```\n:::\n:::\n\n\n## Curva ROC\n\n\n::: {.cell}\n\n```{.r .cell-code}\n     ggplot() +\n     geom_abline(intercept = 0, slope = 1.) + \n     labs(x = \"Taxa Positiva Falsa (1 - Especificidade)\", \n          y = \"Taxa Positiva Verdadeira (Sensibilidade)\", \n          title = \"Curva ROC\") +\n     scale_x_continuous(limits = c(0, 1.0)) + \n     scale_y_continuous(limits = c(0, 1.0))\n```\n\n::: {.cell-output-display}\n![](imagens/Aula08/roc1-1.png){width=864}\n:::\n:::\n\n\n## Testando probabilidades\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprobs <- seq(0, 1, length.out = 10)\nchutando <- map_df(probs, function(p){\n     y_chapeu <- \n          sample(c(\"Masculino\", \"Feminino\"), length(indice_teste), replace = TRUE,                            prob=c(p, 1-p)) %>%  factor(levels = levels(conj_teste$sexo))\n      list(metodo = \"Chutando\",\n           TPF = 1 - specificity(y_chapeu, conj_teste$sexo),\n           TPV = sensitivity(y_chapeu, conj_teste$sexo)) \n})\n     chutando %>%\n     ggplot(aes(TPF, TPV)) +\n     geom_line() +\n     geom_point() +\n     geom_abline(intercept = 0, slope = 1.) + \n     labs(x = \"Taxa Positiva Falsa (1 - Especificidade)\", \n          y = \"Taxa Positiva Verdadeira (Sensibilidade)\", \n          title = \"Curva ROC Método Chutando\") +\n     scale_x_continuous(limits = c(0, 1.0)) + \n     scale_y_continuous(limits = c(0, 1.0))\n```\n\n::: {.cell-output-display}\n![](imagens/Aula08/chute_dif_probs-1.png){width=864}\n:::\n:::\n\n\n## Comparando os dois métodos\n\n\n::: {.cell}\n\n```{.r .cell-code}\npontodecorte <- seq(1.27 , 1.92, by = 0.01)\naltura_ptdecorte <- map_df(pontodecorte, function(x){\n     y_chapeu <- ifelse(conj_teste$altura > x, \"Masculino\", \"Feminino\") %>% \n                 factor(levels = levels(conj_teste$sexo))\n     list(metodo = \"Corte por Altura\",\n        TPF = 1 - specificity(y_chapeu, conj_teste$sexo),\n        TPV = sensitivity(y_chapeu, conj_teste$sexo)) \n})\nbind_rows(chutando, altura_ptdecorte) %>%\n     ggplot(aes(TPF, TPV, color = metodo)) +\n     geom_line() +\n     geom_point() +\n     geom_abline(intercept = 0, slope = 1.) + \n     labs(x = \"Taxa Positiva Falsa (TPF)\", \n          y = \"Taxa Positiva Verdadeira(TPV)\", \n          title = \"Curva ROC\") +\n     scale_x_continuous(limits = c(0, 1.0)) + \n     scale_y_continuous(limits = c(0, 1.0))\n```\n\n::: {.cell-output-display}\n![](imagens/Aula08/roc2-1.png){width=768}\n:::\n:::\n\n\n## Pontos da curva ROC\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmap_df(pontodecorte, function(x){\n     y_chapeu <- ifelse(conj_teste$altura > x, \"Masculino\", \"Feminino\") %>% \n                  factor(levels = c(\"Masculino\", \"Feminino\"))\n     list(metodo = \"Corte por Altura\",\n          corte = round(x, 2), \n          TPF = 1 - specificity(y_chapeu, conj_teste$sexo),\n          TPV = sensitivity(y_chapeu, conj_teste$sexo)) \n}) %>%\n     ggplot(aes(TPF, TPV, label = corte)) +\n     geom_line() +\n     geom_point() +\n     geom_text(nudge_y = - 0.05, size = 3, check_overlap = TRUE) +\n     scale_x_continuous(limits = c(0, 1.0)) + \n     scale_y_continuous(limits = c(0, 1.0))\n```\n\n::: {.cell-output-display}\n![](imagens/Aula08/roc3-1.png){width=864}\n:::\n:::\n\n\n## Curva Precisão-Recall\n\n\n::: {.cell}\n\n```{.r .cell-code}\nchutando <- map_df(probs, function(p){\n            y_chapeu <- sample(c(\"Masculino\", \"Feminino\"), length(indice_teste), \n            replace = TRUE, prob=c(p, 1-p)) %>% \n            factor(levels = c(\"Masculino\", \"Feminino\"))\n     list(metodo = \"Chutando\",\n           recall = sensitivity(y_chapeu, conj_teste$sexo),\n           precisao = posPredValue(y_chapeu, conj_teste$sexo))\n})\naltura_ptdecorte <- map_df(pontodecorte, function(x){\n     y_chapeu <- ifelse(conj_teste$altura > x, \"Masculino\", \"Feminino\") %>% \n          factor(levels = c(\"Masculino\", \"Feminino\"))\n      list(metodo = \"Corte por Altura\",\n           recall = sensitivity(y_chapeu, conj_teste$sexo),\n           precisao = posPredValue(y_chapeu, conj_teste$sexo))\n})\nbind_rows(chutando, altura_ptdecorte) %>%\n     ggplot(aes(recall, precisao, color = metodo)) +\n     geom_line() +\n     geom_point() +\n     labs(x = \"Recall ou Taxa Positiva Verdeira (TPV)\", \n          y = \"Precisão ou Valor Preditivo Positivo (VPP)\", \n          title = \"Curva Precisão - Recall\") +\n     scale_x_continuous(limits = c(0, 1.0)) + \n     scale_y_continuous(limits = c(0, 1.0))\n```\n\n::: {.cell-output-display}\n![](imagens/Aula08/precisao-recall-1.png){width=768}\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}