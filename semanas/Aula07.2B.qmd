---
title: "Problemas na Regressão Multipla"
author: "Ricardo Accioly"
date: "`r Sys.Date()`"
format:
  html:
    grid: 
      margin-width: 350px
    code-link: TRUE
reference-location: margin
citation-location: margin
knitr:
  opts_chunk: 
    out.width: 90%
    comment: "#>"
execute:
  freeze: auto
  message: false
---

## Carregando bibliotecas

```{r}
library(tidyverse)
library(readxl)
library(caret)
```

## Dados de pressão sanguinea

-   BP = Pressão sanguínea (em mm Hg)

-   Age = idade (em anos)

-   Weight = peso (em kg)

-   BSA = area superficial do corpo (em m2)

-   Dur = duração da hipertensão (em anos)

-   Pulse = batimentos (batidas por minuto)

-   Stress = índice de stress

```{r}
pressao_sangue <- read_delim("bloodpress.txt", col_names = TRUE)
```

## Renomeando

```{r}
glimpse(pressao_sangue)
pressao_sangue <- pressao_sangue %>% rename(PS = BP, Idade = Age,
                                            Peso = Weight, Acorp = BSA,
                                            Pulso = Pulse) %>% select(-Pt)
```

## Sumario

```{r}
summary(pressao_sangue)
```

```{r}
library(corrplot)
mat_corr <- cor(cor(pressao_sangue))
corrplot(mat_corr)
cor(pressao_sangue)
```

Aqui vemos que a presssão sanguinea tem uma correlação forte com o peso e também com a área corporal. O peso e a area corporal tem uma correlação forte. Esta correlação alta pode indicar a existencia de multicolinearidade.

```{r}
#| message: false
library(psych)
pairs.panels(pressao_sangue)

```

## Criando conjunto de treino e teste

```{r}
#| message: false
library(caret)
set.seed(25)
y <- pressao_sangue$PS
indice_teste <- createDataPartition(y, times = 1, p = 0.20, list = FALSE)

conj_treino <- pressao_sangue[-indice_teste, ]
conj_teste <- pressao_sangue[indice_teste, ]

glimpse(conj_treino)
glimpse(conj_teste)
```

## 1a. Avaliação

```{r}
mod1 <- lm(PS ~ ., data=conj_treino)
summary(mod1)
library(car)
vif(mod1)

```

## 2a. Avaliação

```{r}
mod2 <- update(mod1,. ~ . -Acorp) 
summary(mod2)
vif(mod2)
```

## 3a. Avaliação

```{r}
mod3 <- lm(PS ~ Idade + Peso + Pulso + Stress, data = conj_treino)
summary(mod3)
residualPlots(mod3)
```

## Comparando Previsão vs Real

```{r}
conj_treino$Previsoes <- predict(mod3, data=conj_treino)
ggplot(conj_treino, aes(x=Previsoes, y=PS)) + 
  geom_point() +
  geom_abline(color = "darkblue") +
  ggtitle("Pressão sanguinea vs. Previsões do modelo linear")
```

## Teste dos resíduos

Teste de normalidade Teste de heterocedasticidade (Bresch-Pagan) Teste de autocorrelação (Durbin-Watson)

```{r}
#| message: false
library(lmtest)
mod3_sum <- summary(mod3)
# Teste de normalidade
shapiro.test(mod3_sum$residuals)
# Teste de hetrocedasticidade
bptest(mod3)
# Teste de autocorrelação
dwtest(mod3)
```

## Avaliação com conjunto de teste

```{r}
sqrt(mean((conj_teste$PS - predict(mod3, conj_teste)) ^ 2)) 
```
