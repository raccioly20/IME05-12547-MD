---
title: "Regressão Linear Múltipla - Validação Cruzada"
author: "Ricardo Accioly"
date: "`r Sys.Date()`"
format:
  html:
    grid: 
      margin-width: 350px
    code-link: TRUE
reference-location: margin
citation-location: margin
---

## Carregando bibliotecas

```{r}
library(tidyverse)
```

## Dados de propaganda

O conjunto de dados contém estatísticas sobre as vendas de um produto em 200 diferentes mercados, juntamente com orçamentos publicitários em cada um desses mercados, para diferentes canais de mídia: TV, rádio e jornal. As vendas estão em milhares de unidades e o orçamento está em milhares de dólares.

```{r}
library(readxl)
propaganda <- read_excel("Propaganda.xlsx")
summary(propaganda)
```

## Renomeando

```{r}
propaganda <- propaganda %>% rename(Jornal = Newspaper, Vendas = Sales)

```

## Validação cruzada

A validação cruzada é útil para termos uma estimativa do erro fora da amostra. O método de validação cruzada é um procedimento utilizado para estimar a qualidade de um modelo de aprendizado de máquina em dados não vistos. A validação cruzada é um procedimento comum para avaliar a capacidade de generalização de um modelo.

```{r}
library(caret)
set.seed(21)
modelo <- train( Vendas ~ ., propaganda, method = "lm",
                 trControl = trainControl(method = "cv", number = 10,
                                          verboseIter = TRUE))
# Mostra o modelo
modelo

# Modelo final
modelo$finalModel

```

Veja que a validação cruzada não faz seleção de variáveis.

O modelo final obtido mostra Jornal com um coeficiente negativo!

Esta variável deveria estar fora do modelo.

## Novo modelo

```{r}
set.seed(21)
modelo <- train( Vendas ~ TV + Radio, propaganda, method = "lm",
                 trControl = trainControl(method = "cv", number = 10,
                                          verboseIter = TRUE))
# Mostra o modelo
modelo

# Modelo final
modelo$finalModel

```

## Modelo Inicial

```{r}
set.seed(21)
y <- propaganda$Vendas
indice_teste <- createDataPartition(y, times = 1, p = 0.40, list = FALSE)
conj_treino <- propaganda[-indice_teste, ]
conj_teste <- propaganda[indice_teste, ]

## Modelo com conjunto de treino
mod <- lm( Vendas ~ TV + Radio, data = conj_treino)
summary(mod)

# Erro com conjunto de teste
sqrt(mean((conj_teste$Vendas - predict(mod, conj_teste)) ^ 2))
```

## 
